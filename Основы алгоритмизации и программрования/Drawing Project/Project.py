# cof = int(input())

from tkinter import *
import random
 
root = Tk()
root.title('Drawing Project')


cof = 5


c = Canvas(width=6200 / cof, height=3400 / cof, bg='white')
c.pack()



c.create_polygon(0 / cof, 0 / cof,
                 6200 / cof, 0 / cof,
                 6200 / cof, 3400 / cof,
                 0 / cof, 3400 / cof,
                 fill = '#fed48c') 



c.create_oval(4666 / cof, 1554 / cof,
              5100 / cof, 1988 / cof,
              fill = '#fefefe', outline = '#fefefe')

c.create_polygon(0 / cof, 3400 / cof,
                 0 / cof, 2600 / cof,
                 1660 / cof, 1604 / cof,
                 2466 / cof, 1880 / cof,
                 3072 / cof, 1484 / cof,
                 4733 / cof, 2049 / cof,
                 5210 / cof, 1662 / cof,
                 5738 / cof, 1885 / cof,
                 6200 / cof, 1553 / cof,
                 6200 / cof, 3400 / cof,
                 fill = '#4e5f6f')

c.create_polygon(0 / cof, 3400 / cof,
                 0 / cof, 1970 / cof,
                 840 / cof, 1500 / cof,
                 1958 / cof, 1940 / cof,
                 2300 / cof, 1740 / cof,
                 3180 / cof, 2010 / cof,
                 3980 / cof, 1500 / cof,
                 5350 / cof, 1944 / cof,
                 5650 / cof, 1740 / cof,
                 6200 / cof, 1963 / cof,
                 6200 / cof, 3400 / cof,
                 fill = '#1c1912')


c.create_polygon(735 / cof, 2288 / cof,
                 735 / cof, 2131 / cof,
                 736 / cof, 2124 / cof,
                 739 / cof, 2119 / cof,
                 742 / cof, 2116 / cof,
                 748 / cof, 2115 / cof,
                 753 / cof, 2118 / cof,
                 757 / cof, 2123 / cof,
                 761 / cof, 2127 / cof,
                 765 / cof, 2132 / cof,
                 768 / cof, 2136 / cof,
                 770 / cof, 2134 / cof,
                 773 / cof, 2124 / cof,
                 777 / cof, 2111 / cof,
                 779 / cof, 2098 / cof,
                 782 / cof, 2088 / cof,
                 786 / cof, 2073 / cof,
                 790 / cof, 2062 / cof,
                 794 / cof, 2054 / cof,
                 799 / cof, 2046 / cof,
                 804 / cof, 2041 / cof,
                 807 / cof, 2040 / cof,
                 810 / cof, 2041 / cof,
                 816 / cof, 2045 / cof,
                 820 / cof, 2050 / cof,
                 825 / cof, 2057 / cof,
                 829 / cof, 2068 / cof,
                 833 / cof, 2081 / cof,
                 837 / cof, 2098 / cof,
                 841 / cof, 2114 / cof,
                 843 / cof, 2129 / cof,
                 845 / cof, 2141 / cof,
                 847 / cof, 2146 / cof,
                 850 / cof, 2148 / cof,
                 854 / cof, 2147 / cof,
                 860 / cof, 2141 / cof,
                 866 / cof, 2134 / cof,
                 871 / cof, 2130 / cof,
                 876 / cof, 2129 / cof,
                 882 / cof, 2131 / cof,
                 886 / cof, 2135 / cof,
                 888 / cof, 2147 / cof,
                 887 / cof, 2159 / cof,
                 884 / cof, 2165 / cof,
                 884 / cof, 2288 / cof,
                 fill = '#26364d')

c.create_polygon(882 / cof, 2288 / cof,
                 946 / cof, 2178 / cof,
                 949 / cof, 2170 / cof,
                 952 / cof, 2163 / cof,
                 955 / cof, 2158 / cof,
                 959 / cof, 2155 / cof,
                 963 / cof, 2154 / cof,
                 967 / cof, 2155 / cof,
                 971 / cof, 2158 / cof,
                 974 / cof, 2161 / cof,
                 977 / cof, 2165 / cof,
                 979 / cof, 2170 / cof,
                 982 / cof, 2177 / cof,
                 983 / cof, 2181 / cof,
                 985 / cof, 2188 / cof,
                 1045 / cof, 2288 / cof,
                 fill = '#3a4b67')

c.create_polygon(1178 / cof, 2502 / cof,
                 1277 / cof, 2256 / cof,
                 1281 / cof, 2244 / cof,
                 1286 / cof, 2235 / cof,
                 1292 / cof, 2228 / cof,
                 1298 / cof, 2224 / cof,
                 1303 / cof, 2222 / cof,
                 1307 / cof, 2219 / cof,
                 1329 / cof, 2217 / cof,
                 1331 / cof, 2208 / cof,
                 1335 / cof, 2201 / cof,
                 1338 / cof, 2192 / cof,
                 1342 / cof, 2184 / cof,
                 1349 / cof, 2177 / cof,
                 1357 / cof, 2170 / cof,
                 1367 / cof, 2166 / cof,
                 1376 / cof, 2163 / cof,
                 1387 / cof, 2162 / cof,
                 1396 / cof, 2163 / cof,
                 1406 / cof, 2166 / cof,
                 1415 / cof, 2171 / cof,
                 1423 / cof, 2176 / cof,
                 1428 / cof, 2179 / cof,
                 1433 / cof, 2180 / cof,
                 1608 / cof, 2516 / cof,
                 fill = '#394a68')





c.create_oval(5122 / cof, 2047 / cof,
	5172 / cof, 2143 / cof,
	fill = '#5e7094', outline = '#5e7094')

c.create_oval(5079 / cof, 2087 / cof,
	5113 / cof, 2127 / cof,
	fill = '#5f738c', outline = '#5f738c')

c.create_polygon(342 / cof, 2179 / cof,
	409 / cof, 1961 / cof,
	464 / cof, 2179 / cof,
	fill = '#232f47')

c.create_polygon(459 / cof, 2305 / cof,
	552 / cof, 2024 / cof,
	656 / cof, 2305 / cof,
	fill = '#384b6b')

c.create_polygon(588 / cof, 2338 / cof,
	676 / cof, 2074 / cof,
	740 / cof, 2338 / cof,
	fill = '#374b6c')
 
c.create_polygon(930 / cof, 2596 / cof,
	1117 / cof, 2015 / cof,
	1256 / cof, 2596 / cof,
	fill = '#5e7192')

c.create_polygon(1101 / cof, 2485 / cof,
	1236 / cof, 2165 / cof,
	1347 / cof, 2478 / cof,
	fill = '#384b6b')

c.create_polygon(1489 / cof, 2543 / cof,
	1627 / cof, 2114 / cof,
	1730 / cof, 2514 / cof,
	fill = '#374a6a')





c.create_polygon(1669 / cof, 2644 / cof,
	1845 / cof, 2066 / cof,
	1986 / cof, 2666 / cof,
	fill = '#222e46')


c.create_polygon(1544 / cof, 2503 / cof,
                 1663 / cof, 2270 / cof,
                 1655 / cof, 2264 / cof,
                 1648 / cof, 2258 / cof,
                 1645 / cof, 2248 / cof,
                 1643 / cof, 2239 / cof,
                 1644 / cof, 2230 / cof,
                 1647 / cof, 2223 / cof,
                 1651 / cof, 2217 / cof,
                 1657 / cof, 2215 / cof,
                 1665 / cof, 2216 / cof,
                 1672 / cof, 2218 / cof,
                 1676 / cof, 2219 / cof,
                 1681 / cof, 2216 / cof,
                 1684 / cof, 2165 / cof,
                 1688 / cof, 2162 / cof,
                 1692 / cof, 2161 / cof,
                 1698 / cof, 2165 / cof,
                 1704 / cof, 2172 / cof,
                 1709 / cof, 2175 / cof,
                 1712 / cof, 2176 / cof,
                 1717 / cof, 2166 / cof,
                 1722 / cof, 2152 / cof,
                 1727 / cof, 2136 / cof,
                 1732 / cof, 2121 / cof,
                 1739 / cof, 2111 / cof,
                 1744 / cof, 2106 / cof,
                 1749 / cof, 2104 / cof,
                 1757 / cof, 2111 / cof,
                 1765 / cof, 2128 / cof,
                 1771 / cof, 2149 / cof,
                 1776 / cof, 2166 / cof,
                 1779 / cof, 2178 / cof,
                 1781 / cof, 2184 / cof,
                 1783 / cof, 2186 / cof,
                 1791 / cof, 2183 / cof,
                 1801 / cof, 2175 / cof,
                 1809 / cof, 2169 / cof,
                 1813 / cof, 2167 / cof,
                 1942 / cof, 2466 / cof,
                 fill = '#222e46')





c.create_polygon(1826 / cof, 2486 / cof,
1929 / cof, 2145 / cof,
2020 / cof, 2456 / cof,
fill = '#394a68')  


c.create_polygon(1332 / cof, 2538 / cof,
                 1411 / cof, 2290 / cof,
                 1412 / cof, 2281 / cof,
                 1416 / cof, 2271 / cof,
                 1423 / cof, 2264 / cof,
                 1430 / cof, 2260 / cof,
                 1433 / cof, 2255 / cof,
                 1432 / cof, 2248 / cof,
                 1428 / cof, 2239 / cof,
                 1427 / cof, 2229 / cof,
                 1425 / cof, 2219 / cof,
                 1423 / cof, 2210 / cof,
                 1424 / cof, 2198 / cof,
                 1427 / cof, 2187 / cof,
                 1432 / cof, 2179 / cof,
                 1439 / cof, 2176 / cof,
                 1445 / cof, 2175 / cof,
                 1449 / cof, 2173 / cof,
                 1451 / cof, 2169 / cof,
                 1449 / cof, 2162 / cof,
                 1447 / cof, 2147 / cof,
                 1446 / cof, 2132 / cof,
                 1448 / cof, 2118 / cof,
                 1452 / cof, 2111 / cof,
                 1458 / cof, 2108 / cof,
                 1466 / cof, 2108 / cof,
                 1472 / cof, 2111 / cof,
                 1480 / cof, 2114 / cof,
                 1484 / cof, 2115 / cof,
                 1488 / cof, 2102 / cof,
                 1491 / cof, 2086 / cof,
                 1495 / cof, 2070 / cof,
                 1500 / cof, 2056 / cof,
                 1507 / cof, 2050 / cof,
                 1515 / cof, 2047 / cof,
                 1522 / cof, 2051 / cof,
                 1529 / cof, 2059 / cof,
                 1534 / cof, 2070 / cof,
                 1538 / cof, 2082 / cof,
                 1539 / cof, 2097 / cof,
                 1541 / cof, 2119 / cof,
                 1544 / cof, 2123 / cof,
                 1561 / cof, 2125 / cof,
                 1566 / cof, 2129 / cof,
                 1572 / cof, 2134 / cof,
                 1575 / cof, 2140 / cof,
                 1578 / cof, 2150 / cof,
                 1577 / cof, 2163 / cof,
                 1575 / cof, 2174 / cof,
                 1574 / cof, 2180 / cof,
                 1577 / cof, 2186 / cof,
                 1585 / cof, 2187 / cof,
                 1597 / cof, 2190 / cof,
                 1602 / cof, 2196 / cof,
                 1606 / cof, 2205 / cof,
                 1607 / cof, 2218 / cof,
                 1604 / cof, 2228 / cof,
                 1601 / cof, 2239 / cof,
                 1597 / cof, 2249 / cof,
                 1593 / cof, 2257 / cof,
                 1591 / cof, 2262 / cof,
                 1592 / cof, 2266 / cof,
                 1600 / cof, 2267 / cof,
                 1617 / cof, 2266 / cof,
                 1624 / cof, 2269 / cof,
                 1630 / cof, 2274 / cof,
                 1633 / cof, 2281 / cof,
                 1635 / cof, 2285 / cof,
                 1639 / cof, 2284 / cof,
                 1651 / cof, 2270 / cof,
                 1656 / cof, 2264 / cof,
                 1665 / cof, 2261 / cof,
                 1673 / cof, 2256 / cof,
                 1677 / cof, 2251 / cof,
                 1679 / cof, 2244 / cof,
                 1683 / cof, 2235 / cof,
                 1691 / cof, 2227 / cof,
                 1700 / cof, 2221 / cof,
                 1710 / cof, 2217 / cof,
                 1721 / cof, 2215 / cof,
                 1733 / cof, 2218 / cof,
                 1745 / cof, 2224 / cof,
                 1751 / cof, 2227 / cof,
                 1756 / cof, 2234 / cof,
                 1761 / cof, 2242 / cof,
                 1767 / cof, 2249 / cof,
                 1776 / cof, 2251 / cof,
                 1788 / cof, 2253 / cof,
                 1797 / cof, 2259 / cof,
                 1806 / cof, 2268 / cof,
                 1812 / cof, 2280 / cof,
                 1815 / cof, 2291 / cof,
                 1819 / cof, 2300 / cof,
                 1825 / cof, 2305 / cof,
                 1835 / cof, 2308 / cof,
                 1847 / cof, 2312 / cof,
                 1854 / cof, 2319 / cof,
                 1858 / cof, 2327 / cof,
                 1862 / cof, 2337 / cof,
                 1866 / cof, 2347 / cof,
                 1872 / cof, 2352 / cof,
                 1898 / cof, 2352 / cof,
                 1907 / cof, 2345 / cof,
                 1917 / cof, 2340 / cof,
                 1934 / cof, 2339 / cof,
                 1937 / cof, 2335 / cof,
                 1935 / cof, 2353 / cof,
                 1929 / cof, 2313 / cof,
                 1925 / cof, 2299 / cof,
                 1923 / cof, 2291 / cof,
                 1926 / cof, 2278 / cof,
                 1933 / cof, 2267 / cof,
                 1941 / cof, 2260 / cof,
                 1946 / cof, 2255 / cof,
                 1947 / cof, 2250 / cof,
                 1943 / cof, 2238 / cof,
                 1940 / cof, 2226 / cof,
                 1939 / cof, 2212 / cof,
                 1940 / cof, 2196 / cof,
                 1942 / cof, 2186 / cof,
                 1946 / cof, 2178 / cof,
                 1953 / cof, 2175 / cof,
                 1965 / cof, 2175 / cof,
                 1963 / cof, 2158 / cof,
                 1960 / cof, 2143 / cof,
                 1959 / cof, 2131 / cof,
                 1961 / cof, 2117 / cof,
                 1965 / cof, 2111 / cof,
                 1972 / cof, 2108 / cof,
                 1979 / cof, 2107 / cof,
                 1986 / cof, 2110 / cof,
                 1993 / cof, 2113 / cof,
                 1995 / cof, 2114 / cof,
                 2001 / cof, 2110 / cof,
                 2004 / cof, 2089 / cof,
                 2007 / cof, 2076 / cof,
                 2010 / cof, 2066 / cof,
                 2014 / cof, 2055 / cof,
                 2020 / cof, 2049 / cof,
                 2029 / cof, 2046 / cof,
                 2038 / cof, 2052 / cof,
                 2045 / cof, 2060 / cof,
                 2050 / cof, 2072 / cof,
                 2052 / cof, 2087 / cof,
                 2052 / cof, 2114 / cof,
                 2054 / cof, 2119 / cof,
                 2062 / cof, 2122 / cof,
                 2072 / cof, 2124 / cof,
                 2080 / cof, 2127 / cof,
                 2086 / cof, 2133 / cof,
                 2090 / cof, 2142 / cof,
                 2092 / cof, 2155 / cof,
                 2090 / cof, 2169 / cof,
                 2088 / cof, 2177 / cof,
                 2090 / cof, 2183 / cof,
                 2100 / cof, 2186 / cof,
                 2109 / cof, 2189 / cof,
                 2116 / cof, 2195 / cof,
                 2120 / cof, 2203 / cof,
                 2192 / cof, 2546 / cof,
                 fill = '#5d7091')


c.create_polygon(2087 / cof, 2360 / cof,
                 2127 / cof, 2199 / cof,
                 2128 / cof, 2158 / cof,
                 2131 / cof, 2152 / cof,
                 2136 / cof, 2149 / cof,
                 2144 / cof, 2150 / cof,
                 2149 / cof, 2152 / cof,
                 2155 / cof, 2153 / cof,
                 2160 / cof, 2149 / cof,
                 2162 / cof, 2135 / cof,
                 2166 / cof, 2120 / cof,
                 2170 / cof, 2108 / cof,
                 2177 / cof, 2100 / cof,
                 2184 / cof, 2099 / cof,
                 2192 / cof, 2101 / cof,
                 2198 / cof, 2110 / cof,
                 2202 / cof, 2121 / cof,
                 2204 / cof, 2135 / cof,
                 2205 / cof, 2152 / cof,
                 2206 / cof, 2157 / cof,
                 2211 / cof, 2160 / cof,
                 2218 / cof, 2162 / cof,
                 2226 / cof, 2166 / cof,
                 2232 / cof, 2172 / cof,
                 2235 / cof, 2183 / cof,
                 2237 / cof, 2193 / cof,
                 2301 / cof, 2363 / cof,
                 fill = '#222e46')


c.create_polygon(1932 / cof, 2498 / cof,
2065 / cof, 2165 / cof,
2170 / cof, 2480 / cof,
fill = '#394a68')  


c.create_polygon(1979 / cof, 2415 / cof,
                 2082 / cof, 2214 / cof,
                 2087 / cof, 2229 / cof,
                 2095 / cof, 2238 / cof,
                 2104 / cof, 2242 / cof,
                 2109 / cof, 2243 / cof,
                 2113 / cof, 2235 / cof,
                 2116 / cof, 2224 / cof,
                 2119 / cof, 2212 / cof,
                 2121 / cof, 2203 / cof,
                 2125 / cof, 2200 / cof,
                 2130 / cof, 2199 / cof,
                 2137 / cof, 2204 / cof,
                 2141 / cof, 2212 / cof,
                 2144 / cof, 2222 / cof,
                 2146 / cof, 2232 / cof,
                 2148 / cof, 2240 / cof,
                 2149 / cof, 2247 / cof,
                 2152 / cof, 2251 / cof,
                 2158 / cof, 2250 / cof,
                 2163 / cof, 2246 / cof,
                 2169 / cof, 2247 / cof,
                 2172 / cof, 2253 / cof,
                 2172 / cof, 2261 / cof,
                 2170 / cof, 2269 / cof,
                 2168 / cof, 2277 / cof,
                 2169 / cof, 2284 / cof,
                 2176 / cof, 2288 / cof,
                 2180 / cof, 2291 / cof,
                 2183 / cof, 2297 / cof,
                 2182 / cof, 2306 / cof,
                 2179 / cof, 2314 / cof,
                 2177 / cof, 2323 / cof,
                 2179 / cof, 2329 / cof,
                 2183 / cof, 2331 / cof,
                 2188 / cof, 2335 / cof,
                 2191 / cof, 2341 / cof,
                 2193 / cof, 2348 / cof,
                 2194 / cof, 2356 / cof,
                 2104 / cof, 2498 / cof,
                 fill = '#394a68')




c.create_polygon(2122 / cof, 2580 / cof,
	2292 / cof, 2020 / cof,
	2342 / cof, 2228 / cof,
	2425 / cof, 1960 / cof,
	2547 / cof, 2460 / cof,
	fill = '#222e46')

c.create_polygon(2716 / cof, 2338 / cof,
	2776 / cof, 2141 / cof,
	2829 / cof, 2361 / cof,
	fill = '#394a68')

c.create_polygon(2828 / cof, 2481 / cof,
	2972 / cof, 2010 / cof,
	3099 / cof, 2559 / cof,
	fill = '#5e7192')


c.create_polygon(3524 / cof, 2443 / cof,
3655 / cof, 2073 / cof,
3674 / cof, 2068 / cof,
3695 / cof, 2067 / cof,
3714 / cof, 2072 / cof,
3728 / cof, 2080 / cof,
3740 / cof, 2091 / cof,
3748 / cof, 2101 / cof,
3754 / cof, 2115 / cof,
3756 / cof, 2127 / cof,
3759 / cof, 2136 / cof,
3767 / cof, 2139 / cof,
3784 / cof, 2141 / cof,
3802 / cof, 2147 / cof,
3817 / cof, 2158 / cof,
3826 / cof, 2170 / cof,
3835 / cof, 2185 / cof,
3840 / cof, 2199 / cof,
3839 / cof, 2212 / cof,
3765 / cof, 2525 / cof,
fill = '#1e2f43')




#############################################################################



c.create_polygon(3642 / cof, 2478 / cof,
3839 / cof, 2223 / cof,
3846 / cof, 2226 / cof,
3853 / cof, 2224 / cof,
3850 / cof, 2192 / cof,
3852 / cof, 2183 / cof,
3856 / cof, 2178 / cof,
3862 / cof, 2176 / cof,
3869 / cof, 2178 / cof,
3876 / cof, 2180 / cof,
3881 / cof, 2170 / cof,
3883 / cof, 2156 / cof,
3887 / cof, 2144 / cof,
3892 / cof, 2135 / cof,
3898 / cof, 2132 / cof,
3903 / cof, 2133 / cof,
3908 / cof, 2137 / cof,
3914 / cof, 2145 / cof,
3917 / cof, 2155 / cof,
3919 / cof, 2167 / cof,
3920 / cof, 2184 / cof,
3929 / cof, 2188 / cof,
3938 / cof, 2193 / cof,
3943 / cof, 2197 / cof,
3947 / cof, 2205 / cof,
3946 / cof, 2221 / cof,
3945 / cof, 2231 / cof,
3952 / cof, 2235 / cof,
3960 / cof, 2235 / cof,
3966 / cof, 2244 / cof,
3969 / cof, 2257 / cof,
3966 / cof, 2271 / cof,
3958 / cof, 2286 / cof,
3958 / cof, 2293 / cof,
3970 / cof, 2292 / cof,
3983 / cof, 2297 / cof,
3987 / cof, 2307 / cof,
3970 / cof, 2342 / cof,
3980 / cof, 2344 / cof,
3986 / cof, 2347 / cof,
3992 / cof, 2351 / cof,
4068 / cof, 2519 / cof,
fill = '#485b7c')







c.create_polygon(3193 / cof, 2332 / cof,
	3277 / cof, 2072 / cof,
	3346 / cof, 2362 / cof,
	fill = '#232f47')


c.create_polygon(2976 / cof, 2554 / cof,
                 3164 / cof, 2252 / cof,
                 3169 / cof, 2253 / cof,
                 3172 / cof, 2255 / cof,
                 3177 / cof, 2254 / cof,
                 3179 / cof, 2248 / cof,
                 3176 / cof, 2232 / cof,
                 3178 / cof, 2217 / cof,
                 3181 / cof, 2207 / cof,
                 3186 / cof, 2205 / cof,
                 3191 / cof, 2207 / cof,
                 3197 / cof, 2211 / cof,
                 3200 / cof, 2215 / cof,
                 3202 / cof, 2216 / cof,
                 3206 / cof, 2213 / cof,
                 3209 / cof, 2199 / cof,
                 3214 / cof, 2185 / cof,
                 3219 / cof, 2171 / cof,
                 3224 / cof, 2161 / cof,
                 3231 / cof, 2155 / cof,
                 3238 / cof, 2158 / cof,
                 3245 / cof, 2165 / cof,
                 3249 / cof, 2176 / cof,
                 3254 / cof, 2189 / cof,
                 3257 / cof, 2202 / cof,
                 3259 / cof, 2212 / cof,
                 3262 / cof, 2221 / cof,
                 3265 / cof, 2225 / cof,
                 3271 / cof, 2222 / cof,
                 3276 / cof, 2219 / cof,
                 3373 / cof, 2240 / cof,
                 3486 / cof, 2257 / cof,
                 3486 / cof, 2574 / cof,
                 fill = '#5c6f8f')

c.create_polygon(3332 / cof, 2524 / cof,
                 3476 / cof, 2210 / cof,
                 3480 / cof, 2191 / cof,
                 3484 / cof, 2182 / cof,
                 3491 / cof, 2176 / cof,
                 3503 / cof, 2175 / cof,
                 3505 / cof, 2170 / cof,
                 3502 / cof, 2153 / cof,
                 3499 / cof, 2140 / cof,
                 3500 / cof, 2131 / cof,
                 3501 / cof, 2118 / cof,
                 3506 / cof, 2111 / cof,
                 3513 / cof, 2108 / cof,
                 3522 / cof, 2109 / cof,
                 3528 / cof, 2112 / cof,
                 3532 / cof, 2113 / cof,
                 3539 / cof, 2110 / cof,
                 3543 / cof, 2102 / cof,
                 3544 / cof, 2085 / cof,
                 3547 / cof, 2073 / cof,
                 3550 / cof, 2063 / cof,
                 3554 / cof, 2055 / cof,
                 3560 / cof, 2049 / cof,
                 3567 / cof, 2047 / cof,
                 3573 / cof, 2048 / cof,
                 3578 / cof, 2053 / cof,
                 3585 / cof, 2061 / cof,
                 3588 / cof, 2071 / cof,
                 3591 / cof, 2088 / cof,
                 3593 / cof, 2116 / cof,
                 3599 / cof, 2120 / cof,
                 3604 / cof, 2121 / cof,
                 3609 / cof, 2119 / cof,
                 3631 / cof, 2114 / cof,
                 3721 / cof, 2528 / cof,
                 fill = '#232f47')

c.create_polygon(3150 / cof, 2670 / cof,
3261 / cof, 2350 / cof,
3256 / cof, 2342 / cof,
3253 / cof, 2330 / cof,
3251 / cof, 2314 / cof,
3253 / cof, 2298 / cof,
3257 / cof, 2288 / cof,
3265 / cof, 2283 / cof,
3275 / cof, 2280 / cof,
3286 / cof, 2282 / cof,
3291 / cof, 2283 / cof,
3293 / cof, 2278 / cof,
3285 / cof, 2269 / cof,
3283 / cof, 2246 / cof,
3279 / cof, 2229 / cof,
3275 / cof, 2213 / cof,
3278 / cof, 2197 / cof,
3284 / cof, 2191 / cof,
3294 / cof, 2187 / cof,
3308 / cof, 2189 / cof,
3319 / cof, 2193 / cof,
3322 / cof, 2192 / cof,
3319 / cof, 2176 / cof,
3320 / cof, 2127 / cof,
3324 / cof, 2118 / cof,
3330 / cof, 2115 / cof,
3354 / cof, 2136 / cof,
3360 / cof, 2123 / cof,
3365 / cof, 2091 / cof,
3373 / cof, 2068 / cof,
3381 / cof, 2050 / cof,
3390 / cof, 2041 / cof,
3394 / cof, 2039 / cof,
3401 / cof, 2044 / cof,
3408 / cof, 2054 / cof,
3413 / cof, 2068 / cof,
3419 / cof, 2087 / cof,
3425 / cof, 2112 / cof,
3428 / cof, 2130 / cof,
3431 / cof, 2145 / cof,
3434 / cof, 2148 / cof,
3437 / cof, 2148 / cof,
3456 / cof, 2131 / cof,
3463 / cof, 2130 / cof,
3467 / cof, 2134 / cof,
3471 / cof, 2143 / cof,
3471 / cof, 2165 / cof,
3461 / cof, 2208 / cof,
3462 / cof, 2213 / cof,
3477 / cof, 2211 / cof,
3488 / cof, 2215 / cof,
3491 / cof, 2222 / cof,
3490 / cof, 2245 / cof,
3484 / cof, 2272 / cof,
3476 / cof, 2293 / cof,
3479 / cof, 2299 / cof,
3505 / cof, 2301 / cof,
3510 / cof, 2304 / cof,
3511 / cof, 2313 / cof,
3509 / cof, 2326 / cof,
3504 / cof, 2338 / cof,
3502 / cof, 2346 / cof,
3505 / cof, 2351 / cof,
3591 / cof, 2650 / cof,
fill = '#3a4b69')


c.create_polygon(3362 / cof, 2712 / cof,
3551 / cof, 2352 / cof,
3564 / cof, 2343 / cof,
3577 / cof, 2337 / cof,
3578 / cof, 2331 / cof,
3575 / cof, 2321 / cof,
3576 / cof, 2310 / cof,
3583 / cof, 2296 / cof,
3591 / cof, 2285 / cof,
3600 / cof, 2279 / cof,
3609 / cof, 2277 / cof,
3614 / cof, 2272 / cof,
3617 / cof, 2256 / cof,
3622 / cof, 2241 / cof,
3630 / cof, 2230 / cof,
3644 / cof, 2222 / cof,
3658 / cof, 2219 / cof,
3668 / cof, 2216 / cof,
3673 / cof, 2202 / cof,
3680 / cof, 2187 / cof,
3689 / cof, 2178 / cof,
3702 / cof, 2169 / cof,
3719 / cof, 2163 / cof,
3736 / cof, 2165 / cof,
3749 / cof, 2169 / cof,
3759 / cof, 2176 / cof,
3769 / cof, 2184 / cof,
3774 / cof, 2188 / cof,
3788 / cof, 2184 / cof,
3808 / cof, 2183 / cof,
3820 / cof, 2188 / cof,
3829 / cof, 2197 / cof,
3839 / cof, 2213 / cof,
3841 / cof, 2236 / cof,
3846 / cof, 2243 / cof,
3859 / cof, 2250 / cof,
3869 / cof, 2261 / cof,
3875 / cof, 2273 / cof,
3879 / cof, 2290 / cof,
3882 / cof, 2303 / cof,
3886 / cof, 2310 / cof,
3894 / cof, 2315 / cof,
3897 / cof, 2325 / cof,
3903 / cof, 2334 / cof,
3914 / cof, 2344 / cof,
3923 / cof, 2351 / cof,
3924 / cof, 2356 / cof,
4077 / cof, 2769 / cof,
fill = '#5e7192')


c.create_polygon(2946 / cof, 2505 / cof,
	3110 / cof, 2094 / cof,
	3250 / cof, 2519 / cof,
	fill = '#394a68')


c.create_polygon(3796 / cof, 2749 / cof,
	4042 / cof, 1963 / cof,
	4199 / cof, 2654 / cof,
	fill = '#232f47')





c.create_polygon(4199 / cof, 2654 / cof,
	4100 / cof, 2263 / cof,
	4185 / cof, 2018 / cof,
	4244 / cof, 2270 / cof,
	4248 / cof, 2270 / cof,
	4308 / cof, 2071 / cof,
	4440 / cof, 2596 / cof,
	fill = '#374a6a')

c.create_polygon(4083 / cof, 2724 / cof,
4301 / cof, 2325 / cof,
4300 / cof, 2307 / cof,
4303 / cof, 2292 / cof,
4311 / cof, 2283 / cof,
4321 / cof, 2280 / cof,
4341 / cof, 2281 / cof,
4342 / cof, 2274 / cof,
4328 / cof, 2232 / cof,
4324 / cof, 2211 / cof,
4326 / cof, 2198 / cof,
4333 / cof, 2189 / cof,
4344 / cof, 2187 / cof,
4363 / cof, 2192 / cof,
4370 / cof, 2192 / cof,
4368 / cof, 2173 / cof,
4367 / cof, 2134 / cof,
4371 / cof, 2121 / cof,
4376 / cof, 2116 / cof,
4384 / cof, 2118 / cof,
4400 / cof, 2134 / cof,
4403 / cof, 2135 / cof,
4407 / cof, 2124 / cof,
4413 / cof, 2095 / cof,
4418 / cof, 2075 / cof,
4426 / cof, 2056 / cof,
4436 / cof, 2041 / cof,
4442 / cof, 2038 / cof,
4451 / cof, 2045 / cof,
4457 / cof, 2056 / cof,
4463 / cof, 2072 / cof,
4468 / cof, 2090 / cof,
4472 / cof, 2108 / cof,
4476 / cof, 2128 / cof,
4480 / cof, 2146 / cof,
4484 / cof, 2147 / cof,
4495 / cof, 2138 / cof,
4505 / cof, 2129 / cof,
4512 / cof, 2128 / cof,
4517 / cof, 2130 / cof,
4520 / cof, 2137 / cof,
4519 / cof, 2165 / cof,
4516 / cof, 2181 / cof,
4511 / cof, 2200 / cof,
4510 / cof, 2211 / cof,
4552 / cof, 2211 / cof,
4720 / cof, 2689 / cof,
fill = '#25354c')


c.create_polygon(4472 / cof, 2541 / cof,
4544 / cof, 2350 / cof,
4550 / cof, 2343 / cof,
4554 / cof, 2332 / cof,
4558 / cof, 2322 / cof,
4559 / cof, 2313 / cof,
4556 / cof, 2305 / cof,
4548 / cof, 2300 / cof,
4528 / cof, 2299 / cof,
4525 / cof, 2296 / cof,
4527 / cof, 2287 / cof,
4530 / cof, 2275 / cof,
4536 / cof, 2261 / cof,
4543 / cof, 2249 / cof,
4544 / cof, 2210 / cof,
4550 / cof, 2203 / cof,
4557 / cof, 2206 / cof,
4562 / cof, 2211 / cof,
4567 / cof, 2213 / cof,
4571 / cof, 2211 / cof,
4575 / cof, 2191 / cof,
4580 / cof, 2175 / cof,
4586 / cof, 2163 / cof,
4593 / cof, 2156 / cof,
4599 / cof, 2155 / cof,
4605 / cof, 2159 / cof,
4611 / cof, 2167 / cof,
4615 / cof, 2179 / cof,
4619 / cof, 2195 / cof,
4624 / cof, 2209 / cof,
4625 / cof, 2218 / cof,
4628 / cof, 2221 / cof,
4637 / cof, 2218 / cof,
4647 / cof, 2213 / cof,
4653 / cof, 2215 / cof,
4656 / cof, 2225 / cof,
4655 / cof, 2241 / cof,
4651 / cof, 2256 / cof,
4649 / cof, 2264 / cof,
4654 / cof, 2266 / cof,
4662 / cof, 2264 / cof,
4671 / cof, 2267 / cof,
4750 / cof, 2300 / cof,
4771 / cof, 2500 / cof,
fill = '#374a68')



c.create_polygon(4588 / cof, 2552 / cof,
	4750 / cof, 2012 / cof,
	4854 / cof, 2460 / cof,
	fill = '#5d7091')


c.create_polygon(2312 / cof, 2575 / cof,
                 2444 / cof, 2353 / cof,
                 2444 / cof, 2334 / cof,
                 2446 / cof, 2321 / cof,
                 2450 / cof, 2315 / cof,
                 2455 / cof, 2312 / cof,
                 2471 / cof, 2311 / cof,
                 2473 / cof, 2304 / cof,
                 2467 / cof, 2294 / cof,
                 2464 / cof, 2282 / cof,
                 2463 / cof, 2267 / cof,
                 2465 / cof, 2255 / cof,
                 2473 / cof, 2250 / cof,
                 2485 / cof, 2252 / cof,
                 2492 / cof, 2253 / cof,
                 2494 / cof, 2242 / cof,
                 2497 / cof, 2209 / cof,
                 2502 / cof, 2205 / cof,
                 2509 / cof, 2208 / cof,
                 2514 / cof, 2213 / cof,
                 2519 / cof, 2216 / cof,
                 2523 / cof, 2213 / cof,
                 2530 / cof, 2188 / cof,
                 2539 / cof, 2165 / cof,
                 2546 / cof, 2157 / cof, 
                 2551 / cof, 2156 / cof,
                 2557 / cof, 2158 / cof,
                 2562 / cof, 2165 / cof,
                 2566 / cof, 2174 / cof,
                 2570 / cof, 2186 / cof,
                 2573 / cof, 2198 / cof,
                 2577 / cof, 2212 / cof,
                 2581 / cof, 2224 / cof,
                 2588 / cof, 2221 / cof,
                 2597 / cof, 2214 / cof,
                 2606 / cof, 2215 / cof,
                 2609 / cof, 2220 / cof,
                 2610 / cof, 2230 / cof,
                 2615 / cof, 2238 / cof,
                 2625 / cof, 2249 / cof,
                 2612 / cof, 2256 / cof,
                 2608 / cof, 2248 / cof,
                 2605 / cof, 2255 / cof,
                 2601 / cof, 2263 / cof,
                 2601 / cof, 2269 / cof,
                 2607 / cof, 2272 / cof,
                 2657 / cof, 2374 / cof,
                 2661 / cof, 2596 / cof,
                 fill = '#39496a')

c.create_polygon(2553 / cof, 2512 / cof,
                 2700 / cof, 2293 / cof,
                 2714 / cof, 2286 / cof,
                 2726 / cof, 2281 / cof,
                 2734 / cof, 2275 / cof,
                 2737 / cof, 2280 / cof,
                 2741 / cof, 2284 / cof,
                 2745 / cof, 2286 / cof,
                 2751 / cof, 2285 / cof,
                 2757 / cof, 2279 / cof,
                 2762 / cof, 2272 / cof,
                 2769 / cof, 2266 / cof,
                 2776 / cof, 2262 / cof,
                 2785 / cof, 2259 / cof,
                 2789 / cof, 2256 / cof,
                 2792 / cof, 2247 / cof,
                 2796 / cof, 2238 / cof,
                 2797 / cof, 2230 / cof,
                 2800 / cof, 2225 / cof,
                 2804 / cof, 2227 / cof,
                 2811 / cof, 2222 / cof,
                 2823 / cof, 2217 / cof,
                 2832 / cof, 2215 / cof,
                 2841 / cof, 2217 / cof,
                 2852 / cof, 2220 / cof,
                 2860 / cof, 2226 / cof,
                 2867 / cof, 2233 / cof,
                 2873 / cof, 2239 / cof,
                 2877 / cof, 2245 / cof,
                 2880 / cof, 2250 / cof,
                 2900 / cof, 2253 / cof,
                 2911 / cof, 2258 / cof,
                 2918 / cof, 2265 / cof,
                 2924 / cof, 2275 / cof,
                 2927 / cof, 2285 / cof,
                 2929 / cof, 2299 / cof,
                 2937 / cof, 2305 / cof,
                 2947 / cof, 2307 / cof,
                 2956 / cof, 2311 / cof,
                 2964 / cof, 2317 / cof,
                 2971 / cof, 2326 / cof,
                 2976 / cof, 2337 / cof,
                 2983 / cof, 2351 / cof,
                 3073 / cof, 2589 / cof,
                 fill = '#232f47')

c.create_polygon(2472 / cof, 2531 / cof,
                 2572 / cof, 2352 / cof,
                 2572 / cof, 2333 / cof,
                 2577 / cof, 2327 / cof,
                 2586 / cof, 2323 / cof,
                 2591 / cof, 2320 / cof,
                 2587 / cof, 2303 / cof,
                 2585 / cof, 2289 / cof,
                 2586 / cof, 2280 / cof,
                 2591 / cof, 2276 / cof,
                 2601 / cof, 2275 / cof,
                 2607 / cof, 2273 / cof,
                 2607 / cof, 2263 / cof,
                 2608 / cof, 2246 / cof,
                 2611 / cof, 2241 / cof,
                 2615 / cof, 2240 / cof,
                 2620 / cof, 2241 / cof,
                 2625 / cof, 2245 / cof,
                 2628 / cof, 2243 / cof,
                 2634 / cof, 2218 / cof,
                 2639 / cof, 2204 / cof,
                 2645 / cof, 2199 / cof,
                 2651 / cof, 2201 / cof,
                 2656 / cof, 2209 / cof,
                 2660 / cof, 2222 / cof,
                 2664 / cof, 2237 / cof,
                 2665 / cof, 2248 / cof,
                 2668 / cof, 2252 / cof,
                 2678 / cof, 2247 / cof,
                 2682 / cof, 2245 / cof,
                 2686 / cof, 2248 / cof,
                 2687 / cof, 2266 / cof,
                 2685 / cof, 2273 / cof,
                 2684 / cof, 2281 / cof,
                 2686 / cof, 2286 / cof,
                 2696 / cof, 2289 / cof,
                 2700 / cof, 2293 / cof,
                 2698 / cof, 2306 / cof,
                 2695 / cof, 2317 / cof,
                 2692 / cof, 2325 / cof,
                 2692 / cof, 2329 / cof,
                 2704 / cof, 2334 / cof,
                 2707 / cof, 2340 / cof,
                 2706 / cof, 2352 / cof,
                 2745 / cof, 2547 / cof,
                 fill = '#5d7091')

#######################################################################################################################################

c.create_polygon(0 / cof, 3400 / cof,
0 / cof, 2354 / cof,
6200 / cof, 2354 / cof,
6200 / cof, 3400 / cof,
fill = '#3a7cac')




c.create_polygon(0 / cof, 2354 / cof,
1999 / cof, 2354 / cof,
2006 / cof, 2370 / cof,
0 / cof, 2370 / cof,
fill = '#4184b8')

c.create_polygon(1999 / cof, 2354 / cof,
2288 / cof, 2354 / cof,
2283 / cof, 2370 / cof,
2006 / cof, 2370 / cof,
fill = '#3c7cac')

c.create_polygon(2288 / cof, 2354 / cof,
2356 / cof, 2354 / cof,
2361 / cof, 2370 / cof,
2283 / cof, 2370 / cof,
fill = '#3775a6')

c.create_polygon(2356 / cof, 2354 / cof,
2530 / cof, 2354 / cof,
2535 / cof, 2370 / cof,
2361 / cof, 2370 / cof,
fill = '#3a7cac')

c.create_polygon(2530 / cof, 2354 / cof,
2693 / cof, 2354 / cof,
2687 / cof, 2370 / cof,
2535 / cof, 2370 / cof,
fill = '#4285b9')

c.create_polygon(2693 / cof, 2354 / cof,
2985 / cof, 2354 / cof,
2983 / cof, 2370 / cof,
2687 / cof, 2370 / cof,
fill = '#3a7cac')

c.create_polygon(2985 / cof, 2354 / cof,
3175 / cof, 2354 / cof,
3180 / cof, 2370 / cof,
2983 / cof, 2370 / cof,
fill = '#3d7bae')

c.create_polygon(3175 / cof, 2354 / cof,
3312 / cof, 2354 / cof,
3308 / cof, 2370 / cof,
3180 / cof, 2370 / cof,
fill = '#4082b6')

c.create_polygon(3312 / cof, 2354 / cof,
3547 / cof, 2354 / cof,
3556 / cof, 2370 / cof,
3308 / cof, 2370 / cof,
fill = '#3c7cac')

c.create_polygon(3547 / cof, 2354 / cof,
3964 / cof, 2354 / cof,
3968 / cof, 2370 / cof,
3871 / cof, 2370 / cof,
3846 / cof, 2375 / cof,
3836 / cof, 2372 / cof,
3825 / cof, 2375 / cof,
3791 / cof, 2375 / cof,
3776 / cof, 2372 / cof,
3763 / cof, 2375 / cof,
3728 / cof, 2375 / cof,
3720 / cof, 2370 / cof,
3556 / cof, 2370 / cof,
fill = '#4486b8')

c.create_polygon(3968 / cof, 2370 / cof,
4016 / cof, 2354 / cof,
4023 / cof, 2370 / cof,
3968 / cof, 2370 / cof,
fill = '#3a7cb0')

c.create_polygon(4016 / cof, 2354 / cof,
4335 / cof, 2354 / cof,
4335 / cof, 2370 / cof,
4023 / cof, 2370 / cof,
fill = '#3b77a9')

c.create_polygon(4335 / cof, 2354 / cof,
4599 / cof, 2354 / cof,
4599 / cof, 2362 / cof,
4594 / cof, 2370 / cof,
4335 / cof, 2370 / cof,
fill = '#3e7aac')

c.create_polygon(4594 / cof, 2370 / cof,
4599 / cof, 2362 / cof,
4599 / cof, 2354 / cof,
4639 / cof, 2354 / cof,
4639 /cof, 2361 / cof,
4648 / cof, 2370 / cof,
fill = '#3f7bad')

c.create_polygon(4770 / cof, 2354 / cof,
6200 / cof, 2354 / cof,
6200 / cof, 2370 / cof,
4770 / cof, 2370 / cof,
fill = '#4077a0')

c.create_polygon(4639 / cof, 2361 / cof,
4639 / cof, 2354 / cof,
4791 / cof, 2354 / cof,
4793 / cof, 2363 / cof,
4789 / cof, 2370 / cof,
4648 / cof, 2370 / cof,
fill = '#4885b4')







#######################################################################################################################################


c.create_oval(-7530 / cof, 2005 / cof,
	6470 / cof, 16005 / cof,
	fill = '#ee7500', outline='#ee7500')






c.create_polygon(4742 / cof, 2483 / cof,
	4870 / cof, 2165 / cof,
	4951 / cof, 2402 / cof,
	fill = '#3a4b69')



c.create_oval(4905 / cof, 2200 / cof,
4989 / cof, 2290 / cof,
fill = '#3a4b69', outline = '#3a4b69')



c.create_oval(4957 / cof, 2145 / cof,
5075 / cof, 2263 / cof,
fill = '#3a4b69', outline = '#3a4b69')






c.create_oval(-34 / cof, 2389 / cof,
	108 / cof, 2529 / cof,
	fill = '#988924', outline='#988924')

c.create_oval(51 / cof, 2464 / cof,
	193 / cof, 2604 / cof,
	fill = '#988924', outline='#988924')

c.create_polygon(181 / cof, 2502 / cof,
	228 / cof, 2715 / cof,
	0 / cof, 2621 / cof,
	0 / cof, 2404 / cof,
	96 / cof, 2489 / cof,
	fill = '#988924')

c.create_polygon(272 / cof, 2809 / cof,
414 / cof, 2590 / cof,
424 / cof, 2588 / cof,
439 / cof, 2592 / cof,
441 / cof, 2551 / cof,
445 / cof, 2548 / cof,
453 / cof, 2553 / cof,
461 / cof, 2561 / cof,
468 / cof, 2536 / cof,
476 / cof, 2517 / cof,
481 / cof, 2509 / cof,
486 / cof, 2507 / cof,
491 / cof, 2511 / cof,
496 / cof, 2518 / cof,
503 / cof, 2537 / cof,
506 / cof, 2554 / cof,
508 / cof, 2562 / cof,
510 / cof, 2568 / cof,
516 / cof, 2564 / cof,
526 / cof, 2557 / cof,
533 / cof, 2558 / cof,
536 / cof, 2566 / cof,
533 / cof, 2577 / cof,
533 / cof, 2591 / cof,
689 / cof, 2848 / cof,
fill = '#e24728')

c.create_polygon(334 / cof, 2956 / cof,
500 / cof, 2689 / cof,
499 / cof, 2673 / cof,
503 / cof, 2664 / cof,
510 / cof, 2659 / cof,
536 / cof, 2658 / cof,
536 / cof, 2653 / cof,
525 / cof, 2632 / cof,
521 / cof, 2616 / cof,
522 / cof, 2600 / cof,
530 / cof, 2587 / cof,
541 / cof, 2581 / cof,
546 / cof, 2577 / cof,
539 / cof, 2561 / cof,
535 / cof, 2546 / cof,
533 / cof, 2529 / cof,
536 / cof, 2513 / cof,
542 / cof, 2504 / cof,
551 / cof, 2500 / cof,
562 / cof, 2499 / cof,
558 / cof, 2481 / cof,
554 / cof, 2458 / cof,
557 / cof, 2442 / cof,
563 / cof, 2436 / cof,
570 / cof, 2434 / cof,
580 / cof, 2437 / cof,
589 / cof, 2442 / cof,
594 / cof, 2445 / cof,
596 / cof, 2428 / cof,
600 / cof, 2406 / cof,
603 / cof, 2392 / cof,
609 / cof, 2380 / cof,
617 / cof, 2376 / cof,
623 / cof, 2375 / cof,
629 / cof, 2379 / cof,
637 / cof, 2387 / cof,
641 / cof, 2397 / cof,
644 / cof, 2411 / cof,
646 / cof, 2427 / cof,
643 / cof, 2445 / cof,
645 / cof, 2448 / cof,
664 / cof, 2450 / cof,
673 / cof, 2455 / cof,
678 / cof, 2463 / cof,
681 / cof, 2473 / cof,
680 / cof, 2497 / cof,
676 / cof, 2507 / cof,
676 / cof, 2511 / cof,
697 / cof, 2512 / cof,
704 / cof, 2517 / cof,
709 / cof, 2526 / cof,
711 / cof, 2540 / cof,
706 / cof, 2555 / cof,
692 / cof, 2587 / cof,
695 / cof, 2589 / cof,
715 / cof, 2586 / cof,
951 / cof, 2997 / cof,
fill = '#877427')

c.create_polygon(199 / cof, 2756 / cof,
	341 / cof, 2278 / cof,
	470 / cof, 2848 / cof,
	fill = '#f8ac08')

c.create_polygon(622 / cof, 2898 / cof,
	791 / cof, 2335 / cof,
	921 / cof, 2931 / cof,
	fill = '#e24728')

c.create_polygon(748 / cof, 2838 / cof,
	885 / cof, 2387 / cof,
	984 / cof, 2858 / cof,
	fill = '#4d692e')

c.create_polygon(786 / cof, 3039 / cof,
1112 / cof, 2574 / cof,
1119 / cof, 2572 / cof,
1117 / cof, 2546 / cof,
1120 / cof, 2526 / cof,
1124 / cof, 2520 / cof,
1129 / cof, 2522 / cof,
1145 / cof, 2537 / cof,
1151 / cof, 2510 / cof,
1160 / cof, 2487 / cof,
1167 / cof, 2475 / cof,
1172 / cof, 2471 / cof,
1179 / cof, 2474 / cof,
1186 / cof, 2484 / cof,
1192 / cof, 2501 / cof,
1199 / cof, 2522 / cof,
1202 / cof, 2543 / cof,
1207 / cof, 2541 / cof,
1219 / cof, 2533 / cof,
1229 / cof, 2531 / cof,
1233 / cof, 2543 / cof,
1228 / cof, 2569 / cof,
1224 / cof, 2586 / cof,
1238 / cof, 2582 / cof,
1245 / cof, 2584 / cof,
1251 / cof, 2591 / cof,
1437 / cof, 3033 / cof,
fill = '#e24728')

c.create_polygon(623 / cof, 3148 / cof,
890 / cof, 2689 / cof,
880 / cof, 2663 / cof,
875 / cof, 2636 / cof,
877 / cof, 2614 / cof,
881 / cof, 2603 / cof,
889 / cof, 2597 / cof,
902 / cof, 2595 / cof,
920 / cof, 2600 / cof,
903 / cof, 2551 / cof,
901 / cof, 2533 / cof,
902 / cof, 2513 / cof,
909 / cof, 2506 / cof,
919 / cof, 2504 / cof,
931 / cof, 2505 / cof,
945 / cof, 2511 / cof,
943 / cof, 2459 / cof,
947 / cof, 2438 / cof,
952 / cof, 2432 / cof,
956 / cof, 2431 / cof,
961 / cof, 2435 / cof,
968 / cof, 2442 / cof,
978 / cof, 2457 / cof,
981 / cof, 2453 / cof,
986 / cof, 2425 / cof,
992 / cof, 2396 / cof,
1003 / cof, 2371 / cof,
1013 / cof, 2357 / cof,
1018 / cof, 2355 / cof,
1023 / cof, 2358 / cof,
1029 / cof, 2365 / cof,
1036 / cof, 2382 / cof,
1044 / cof, 2406 / cof,
1049 / cof, 2429 / cof,
1053 / cof, 2452 / cof,
1056 / cof, 2469 / cof,
1061 / cof, 2465 / cof,
1074 / cof, 2452 / cof,
1084 / cof, 2445 / cof,
1091 / cof, 2447 / cof,
1095 / cof, 2457 / cof,
1094 / cof, 2485 / cof,
1088 / cof, 2512 / cof,
1084 / cof, 2531 / cof,
1092 / cof, 2530 / cof,
1105 / cof, 2527 / cof,
1110 / cof, 2528 / cof,
1115 / cof, 2535 / cof,
1117 / cof, 2547 / cof,
1114 / cof, 2569 / cof,
1106 / cof, 2596 / cof,
1098 / cof, 2617 / cof,
1110 / cof, 2614 / cof,
1123 / cof, 2613 / cof,
1133 / cof, 2618 / cof,
1136 / cof, 2634 / cof,
1125 / cof, 2663 / cof,
1111 / cof, 2688 / cof,
1306 / cof, 3177 / cof,
fill = '#f6a901')

c.create_polygon(1179 / cof, 2816 / cof,
	1327 / cof, 2325 / cof,
	1447 / cof, 2862 / cof,
	fill = '#c66403')

c.create_polygon(1314 / cof, 2809 / cof,
	1446 / cof, 2479 / cof,
	1554 / cof, 2809 / cof,
	fill = '#998c24')

c.create_polygon(1231 / cof, 3051 / cof,
1414 / cof, 2686 / cof,
1415 / cof, 2676 / cof,
1419 / cof, 2669 / cof,
1426 / cof, 2664 / cof,
1435 / cof, 2659 / cof,
1442 / cof, 2655 / cof,
1449 / cof, 2655 / cof,
1446 / cof, 2646 / cof,
1444 / cof, 2634 / cof,
1445 / cof, 2621 / cof,
1450 / cof, 2611 / cof,
1456 / cof, 2604 / cof,
1465 / cof, 2598 / cof,
1476 / cof, 2592 / cof,
1486 / cof, 2591 / cof,
1485 / cof, 2576 / cof, 
1488 / cof, 2562 / cof,
1496 / cof, 2551 / cof,
1505 / cof, 2542 / cof,
1516 / cof, 2536 / cof,
1528 / cof, 2534 / cof,
1539 / cof, 2533 / cof,
1541 / cof, 2524 / cof,
1545 / cof, 2511 / cof,
1552 / cof, 2500 / cof,
1560 / cof, 2492 / cof,
1571 / cof, 2485 / cof,
1580 / cof, 2482 / cof,
1590 / cof, 2479 / cof,
1601 / cof, 2480 / cof,
1611 / cof, 2482 / cof,
1625 / cof, 2488 / cof,
1636 / cof, 2497 / cof,
1677 / cof, 2538 / cof,
1872 / cof, 3009 / cof,
fill = '#48632c')

c.create_polygon(1726 / cof, 2778 / cof,
1837 / cof, 2428 / cof,
1915 / cof, 2767 / cof,
fill = '#4e6a2f')

c.create_polygon(1932 / cof, 2769 / cof,
2055 / cof, 2382 / cof,
2144 / cof, 2784 / cof,
fill = '#f6a901')

c.create_polygon(2020 / cof, 2855 / cof,
2139 / cof, 2456 / cof,
2232 / cof, 2799 / cof,
fill = '#d17127')

c.create_polygon(2042 / cof, 3016 / cof,
2116 / cof, 2687 / cof,
2112 / cof, 2680 / cof,
2112 / cof, 2663 / cof,
2121 / cof, 2656 / cof,
2133 / cof, 2652 / cof,
2148 / cof, 2654 / cof,
2149 / cof, 2650 / cof,
2138 / cof, 2626 / cof,
2134 / cof, 2608 / cof,
2135 / cof, 2591 / cof,
2145 / cof, 2580 / cof,
2156 / cof, 2575 / cof,
2157 / cof, 2562 / cof,
2150 / cof, 2546 / cof,
2147 / cof, 2521 / cof,
2150 / cof, 2502 / cof,
2160 / cof, 2492 / cof,
2176 / cof, 2490 / cof,
2169 / cof, 2459 / cof,
2168 / cof, 2443 / cof,
2171 / cof, 2430 / cof,
2180 / cof, 2423 / cof,
2195 / cof, 2425 / cof,
2205 / cof, 2430 / cof,
2210 / cof, 2432 / cof,
2214 / cof, 2398 / cof,
2220 / cof, 2376 / cof,
2227 / cof, 2365 / cof,
2236 / cof, 2361 / cof,
2245 / cof, 2364 / cof,
2252 / cof, 2373 / cof,
2261 / cof, 2393 / cof,
2262 / cof, 2423 / cof,
2263 / cof, 2436 / cof,
2284 / cof, 2439 / cof,
2294 / cof, 2446 / cof,
2300 / cof, 2460 / cof,
2299 / cof, 2483 / cof,
2295 / cof, 2501 / cof,
2320 / cof, 2504 / cof,
2329 / cof, 2515 / cof,
2415 / cof, 2877 / cof,
fill = '#ee6928')

c.create_polygon(2133 / cof, 2828 / cof,
2275 / cof, 2478 / cof,
2390 / cof, 2810 / cof,
fill = '#998c24')

c.create_polygon(2338 / cof, 2904 / cof,
2338 / cof, 2513 / cof,
2335 / cof, 2492 / cof,
2336 / cof, 2474 / cof,
2339 / cof, 2468 / cof,
2346 / cof, 2465 / cof,
2358 / cof, 2468 / cof,
2369 / cof, 2474 / cof,
2371 / cof, 2451 / cof,
2374 / cof, 2435 / cof,
2379 / cof, 2422 / cof,
2387 / cof, 2414 / cof,
2396 / cof, 2414 / cof,
2402 / cof, 2420 / cof,
2408 / cof, 2429 / cof,
2414 / cof, 2456 / cof,
2414 / cof, 2476 / cof,
2433 / cof, 2479 / cof,
2442 / cof, 2486 / cof,
2445 / cof, 2502 / cof,
2444 / cof, 2519 / cof,
2441 / cof, 2530 / cof,
2457 / cof, 2532 / cof, 
2465 / cof, 2537 / cof,
2470 / cof, 2544 / cof,
2469 / cof, 2562 / cof,
2466 / cof, 2576 / cof,
2557 / cof, 2905 / cof,
fill = '#897627')

c.create_polygon(2211 / cof, 2949 / cof,
2270 / cof, 2687 / cof, 
2264 / cof, 2672 / cof,
2262 / cof, 2659 / cof,
2264 / cof, 2645 / cof,
2272 / cof, 2641 / cof,
2285 / cof, 2639 / cof,
2276 / cof, 2612 / cof,
2275 / cof, 2602 / cof,
2278 / cof, 2594 / cof,
2286 / cof, 2591 / cof,
2297 / cof, 2594 / cof,
2299 / cof, 2592 / cof,
2298 / cof, 2560 / cof,
2301 / cof, 2554 / cof,
2306 / cof, 2553 / cof,
2317 / cof, 2566 / cof,
2323 / cof, 2536 / cof,
2329 / cof, 2521 / cof,
2335 / cof, 2514 / cof,
2340 / cof, 2514 / cof,
2347 / cof, 2527 / cof,
2351 / cof, 2541 / cof,
2356 / cof, 2566 / cof,
2358 / cof, 2572 / cof,
2369 / cof, 2562 / cof,
2374 / cof, 2560 / cof,
2378 / cof, 2566 / cof,
2376 / cof, 2587 / cof,
2373 / cof, 2605 / cof, 
2381 / cof, 2603 / cof, 
2386 / cof, 2605 / cof, 
2400 / cof, 2600 / cof, 
2412 / cof, 2599 / cof, 
2423 / cof, 2601 / cof, 
2430 / cof, 2603 / cof, 
2439 / cof, 2590 / cof, 
2450 / cof, 2580 / cof, 
2464 / cof, 2576 / cof, 
2469 / cof, 2576 / cof, 
2474 / cof, 2555 / cof, 
2483 / cof, 2543 / cof, 
2492 / cof, 2537 / cof, 
2503 / cof, 2532 / cof, 
2513 / cof, 2531 / cof, 
2526 / cof, 2532 / cof, 
2539 / cof, 2538 / cof, 
2550 / cof, 2548 / cof, 
2556 / cof, 2558 / cof, 
2559 / cof, 2565 / cof, 
2579 / cof, 2567 / cof, 
2591 / cof, 2573 / cof, 
2602 / cof, 2585 / cof, 
2608 / cof, 2599 / cof, 
2608 / cof, 2613 / cof, 
2619 / cof, 2622 / cof, 
2634 / cof, 2625 / cof, 
2645 / cof, 2631 / cof, 
2652 / cof, 2642 / cof, 
2658 / cof, 2655 / cof, 
2663 / cof, 2665 / cof, 
2669 / cof, 2674 / cof, 
2668 / cof, 2687 / cof, 
2704 / cof, 2944 / cof, 
fill = '#f5a800')

c.create_polygon(1750 / cof, 2931 / cof,
1860 / cof, 2584 / cof,
1856 / cof, 2575 / cof,
1853 / cof, 2565 / cof,
1852 / cof, 2554 / cof, 
1854 / cof, 2545 / cof,
1859 / cof, 2539 / cof,
1867 / cof, 2536 / cof, 
1879 / cof, 2538 / cof,
1894 / cof, 2543 / cof,
1891 / cof, 2521 / cof,
1892 / cof, 2492 / cof, 
1895 / cof, 2484 / cof,
1900 / cof, 2482 / cof, 
1906 / cof, 2484 / cof, 
1922 / cof, 2501 / cof,
1927 / cof, 2482 / cof,
1933 / cof, 2458 / cof,
1943 / cof, 2435 / cof,
1951 / cof, 2425 / cof,
1958 / cof, 2424 / cof,
1965 / cof, 2430 / cof,
1973 / cof, 2442 / cof,
1978 / cof, 2458 / cof,
1982 / cof, 2472 / cof,
1985 / cof, 2485 / cof, 
1988 / cof, 2499 / cof,
1991 / cof, 2509 / cof,
1997 / cof, 2505 / cof,
2006 / cof, 2498 / cof,
2014 / cof, 2494 / cof,
2022 / cof, 2494 / cof, 
2025 / cof, 2500 / cof,
2026 / cof, 2507 / cof,
2024 / cof, 2520 / cof,
2020 / cof, 2539 / cof,
2016 / cof, 2556 / cof,
2019 / cof, 2558 / cof,
2030 / cof, 2554 / cof,
2041 / cof, 2557 / cof,
2045 / cof, 2567 / cof,
2043 / cof, 2582 / cof,
2037 / cof, 2601 / cof,
2033 / cof, 2610 / cof,
2031 / cof, 2623 / cof,
2041 / cof, 2621 / cof,
2055 / cof, 2622 / cof,
2060 / cof, 2626 / cof,
2062 / cof, 2629 / cof,
2052 / cof, 2640 / cof,
2188 / cof, 2918 / cof,
fill = '#e34627')

c.create_polygon(1632 / cof, 3053 / cof,
1732 / cof, 2638 / cof,
1839 / cof, 2603 / cof,
1845 / cof, 2604 / cof,
1849 / cof, 2602 / cof,
1852 / cof, 2593 / cof,
1860 / cof, 2584 / cof,
1869 / cof, 2579 / cof,
1882 / cof, 2575 / cof,
1885 / cof, 2568 / cof,
1889 / cof, 2556 / cof,
1896 / cof, 2545 / cof,
1905 / cof, 2538 / cof,
1919 / cof, 2532 / cof,
1930 / cof, 2530 / cof,
1945 / cof, 2533 / cof,
1955 / cof, 2538 / cof,
1964 / cof, 2546 / cof,
1970 / cof, 2556 / cof,
1974 / cof, 2563 / cof,
1980 / cof, 2567 / cof,
2000 / cof, 2570 / cof,
2009 / cof, 2577 / cof,
2017 / cof, 2585 / cof,
2021 / cof, 2594 / cof,
2024 / cof, 2607 / cof,
2024 / cof, 2615 / cof,
2034 / cof, 2617 / cof,
2044 / cof, 2624 / cof,
2058 / cof, 2631 / cof,
2068 / cof, 2642 / cof,
2073 / cof, 2656 / cof,
2074 / cof, 2662 / cof,
2080 / cof, 2667 / cof,
2084 / cof, 2676 / cof,
2084 / cof, 2691 / cof,
2172 / cof, 3024 / cof,
fill = '#f3a600')



c.create_polygon(1497 / cof, 2975 / cof,
1600 / cof, 2688 / cof,
1597 / cof, 2678 / cof,
1598 / cof, 2669 / cof,
1603 / cof, 2661 / cof,
1610 / cof, 2656 / cof,
1621 / cof, 2654 / cof,
1635 / cof, 2656 / cof,
1637 / cof, 2653 / cof,
1626 / cof, 2636 / cof,
1620 / cof, 2617 / cof,
1619 / cof, 2600 / cof,
1622 / cof, 2591 / cof,
1630 / cof, 2582 / cof,
1638 / cof, 2577 / cof,
1644 / cof, 2575 / cof,
1642 / cof, 2564 / cof,
1637 / cof, 2550 / cof,
1633 / cof, 2530 / cof,
1632 / cof, 2518 / cof,
1635 / cof, 2505 / cof,
1638 / cof, 2497 / cof,
1646 / cof, 2494 / cof,
1661 / cof, 2491 / cof,
1657 / cof, 2473 / cof,
1654 / cof, 2450 / cof,
1657 / cof, 2433 / cof,
1663 / cof, 2426 / cof,
1675 / cof, 2424 / cof,
1695 / cof, 2433 / cof,
1699 / cof, 2407 / cof,
1703 / cof, 2388 / cof,
1708 / cof, 2375 / cof,
1713 / cof, 2368 / cof,
1719 / cof, 2363 / cof,
1723 / cof, 2362 / cof,
1730 / cof, 2365 / cof,
1738 / cof, 2374 / cof,
1745 / cof, 2391 / cof,
1748 / cof, 2412 / cof,
1747 / cof, 2437 / cof,
1765 / cof, 2440 / cof,
1776 / cof, 2446 / cof,
1783 / cof, 2455 / cof,
1787 / cof, 2466 / cof,
1785 / cof, 2485 / cof,
1781 / cof, 2500 / cof,
1783 / cof, 2503 / cof,
1800 / cof, 2504 / cof,
1809 / cof, 2509 / cof,
1813 / cof, 2514 / cof,
1816 / cof, 2524 / cof, 
1814 / cof, 2543 / cof,
1808 / cof, 2560 / cof,
1801 / cof, 2576 / cof,
1798 / cof, 2583 / cof,
1811 / cof, 2582 / cof,
1827 / cof, 2581 / cof,
1835 / cof, 2586 / cof,
1840 / cof, 2590 / cof,
1839 / cof, 2606 / cof,
1828 / cof, 2627 / cof,
1819 / cof, 2641 / cof,
1812 / cof, 2651 / cof,
1838 / cof, 2652 / cof,
1848 / cof, 2657 / cof,
1854 / cof, 2669 / cof,
1850 / cof, 2683 / cof,
1848 / cof, 2688 / cof,
1940 / cof, 3002 / cof,
fill = '#ef521d')




#######################################################################################################################################

c.create_polygon(0 / cof, 3400 / cof,
0 / cof, 2690 / cof,
6200 / cof, 2690 / cof,
6200 / cof, 3400 / cof,
fill = '#3a7cac')

#######################################################################################################################################







c.create_polygon(82 / cof, 2824 / cof,
171 / cof, 2601 / cof,
167 / cof, 2586 / cof,
164 / cof, 2570 / cof,
166 / cof, 2558 / cof,
171 / cof, 2550 / cof,
177 / cof, 2547 / cof,
185 / cof, 2545 / cof,
182 / cof, 2534 / cof,
183 / cof, 2502 / cof,
189 / cof, 2498 / cof,
198 / cof, 2499 / cof,
206 / cof, 2503 / cof,
210 / cof, 2505 / cof,
212 / cof, 2490 / cof,
216 / cof, 2471 / cof,
222 / cof, 2458 / cof,
227 / cof, 2453 / cof,
236 / cof, 2456 / cof,
243 / cof, 2465 / cof,
249 / cof, 2481 / cof,
251 / cof, 2501 / cof,
250 / cof, 2507 / cof,
268 / cof, 2512 / cof,
275 / cof, 2519 / cof,
277 / cof, 2531 / cof,
275 / cof, 2548 / cof,
273 / cof, 2555 / cof,
289 / cof, 2557 / cof,
297 / cof, 2564 / cof,
300 / cof, 2581 / cof,
294 / cof, 2596 / cof,
286 / cof, 2614 / cof,
290 / cof, 2616 / cof,
303 / cof, 2614 / cof,
310 / cof, 2615 / cof,
316 / cof, 2620 / cof,
317 / cof, 2631 / cof,
312 / cof, 2638 / cof,
336 / cof, 2856 / cof,
fill = '#ee6a29')



c.create_oval(-5900 / cof, 2496 / cof,
	4220 / cof, 12616 / cof,
	fill = '#ffa901', outline='#ffa901')


c.create_oval(3810 / cof, 1602 / cof,
	9670 / cof, 7462 / cof,
	fill = '#f3a600', outline = '#f3a600')


c.create_oval(-4171 / cof, 2336 / cof,
	16449 / cof, 22956 / cof,
	fill = '#fed700', outline = '#fed700')


c.create_polygon(5823 / cof, 1751 / cof,
5841 / cof, 1758 / cof, 
5855 / cof, 1765 / cof, 
5871 / cof, 1775 / cof, 
5884 / cof, 1783 / cof, 
5895 / cof, 1790 / cof, 
5906 / cof, 1798 / cof, 
5917 / cof, 1805 / cof, 
5929 / cof, 1814 / cof, 
5941 / cof, 1823 / cof, 
5957 / cof, 1834 / cof, 
5970 / cof, 1844 / cof, 
5987 / cof, 1858 / cof, 
6000 / cof, 1869 / cof, 
6014 / cof, 1881 / cof, 
6026 / cof, 1891 / cof, 
6037 / cof, 1902 / cof, 
6047 / cof, 1911 / cof, 
6061 / cof, 1925 / cof, 
6073 / cof, 1936 / cof, 
6087 / cof, 1950 / cof, 
6099 / cof, 1963 / cof, 
6110 / cof, 1975 / cof, 
6121 / cof, 1988 / cof, 
6130 / cof, 1998 / cof, 
6140 / cof, 2009 / cof, 
6149 / cof, 2020 / cof, 
6158 / cof, 2031 / cof, 
6167 / cof, 2043 / cof, 
6175 / cof, 2054 / cof, 
6185 / cof, 2067 / cof, 
6196 / cof, 2080 / cof, 
6200 / cof, 2080 / cof, 
6200 / cof, 1988 / cof, 
6191 / cof, 1980 / cof, 
6175 / cof, 1965 / cof, 
6161 / cof, 1952 / cof, 
6140 / cof, 1934 / cof, 
6121 / cof, 1917 / cof, 
6106 / cof, 1905 / cof, 
6082 / cof, 1886 / cof, 
6060 / cof, 1868 / cof, 
6039 / cof, 1853 / cof, 
6019 / cof, 1838 / cof, 
6000 / cof, 1825 / cof, 
5977 / cof, 1810 / cof, 
5954 / cof, 1795 / cof, 
5928 / cof, 1779 / cof, 
5904 / cof, 1764 / cof, 
5886 / cof, 1754 / cof, 
5865 / cof, 1744 / cof, 
5859 / cof, 1740 / cof, 
5846 / cof, 1743 / cof, 
5834 / cof, 1747 / cof, 
fill = '#ffffff')

c.create_polygon(3418 / cof, 3400 / cof,
3434 / cof, 3383 / cof, 
3448 / cof, 3370 / cof, 
3464 / cof, 3354 / cof, 
3479 / cof, 3339 / cof, 
3495 / cof, 3324 / cof, 
3511 / cof, 3308 / cof, 
3524 / cof, 3296 / cof, 
3544 / cof, 3277 / cof, 
3568 / cof, 3255 / cof, 
3606 / cof, 3222 / cof, 
3629 / cof, 3201 / cof, 
3659 / cof, 3176 / cof, 
3685 / cof, 3153 / cof, 
3714 / cof, 3129 / cof, 
3744 / cof, 3106 / cof, 
3778 / cof, 3079 / cof, 
3813 / cof, 3051 / cof, 
3840 / cof, 3031 / cof, 
3866 / cof, 3012 / cof, 
3903 / cof, 2986 / cof, 
3940 / cof, 2960 / cof, 
3979 / cof, 2933 / cof, 
4013 / cof, 2909 / cof, 
4058 / cof, 2881 / cof, 
4101 / cof, 2853 / cof, 
4138 / cof, 2831 / cof, 
4181 / cof, 2806 / cof, 
4217 / cof, 2785 / cof, 
4261 / cof, 2760 / cof, 
4306 / cof, 2735 / cof, 
4341 / cof, 2717 / cof, 
4391 / cof, 2691 / cof, 
4435 / cof, 2669 / cof, 
4487 / cof, 2645 / cof, 
4541 / cof, 2620 / cof, 
4598 / cof, 2595 / cof, 
4646 / cof, 2574 / cof, 
4694 / cof, 2554 / cof, 
4740 / cof, 2536 / cof, 
4785 / cof, 2518 / cof, 
4836 / cof, 2499 / cof, 
4890 / cof, 2481 / cof, 
4934 / cof, 2466 / cof, 
4989 / cof, 2448 / cof, 
5048 / cof, 2430 / cof, 
5105 / cof, 2413 / cof, 
5171 / cof, 2396 / cof, 
5207 / cof, 2386 / cof, 
5307 / cof, 2377 / cof, 
5277 / cof, 2389 / cof, 
5234 / cof, 2406 / cof, 
5194 / cof, 2422 / cof, 
5152 / cof, 2440 / cof, 
5114 / cof, 2456 / cof, 
5071 / cof, 2475 / cof, 
5027 / cof, 2494 / cof, 
4987 / cof, 2513 / cof, 
4955 / cof, 2528 / cof, 
4920 / cof, 2545 / cof, 
4888 / cof, 2561 / cof, 
4860 / cof, 2575 / cof, 
4826 / cof, 2592 / cof, 
4794 / cof, 2609 / cof, 
4764 / cof, 2625 / cof, 
4737 / cof, 2640 / cof, 
4714 / cof, 2653 / cof, 
4678 / cof, 2673 / cof, 
4635 / cof, 2697 / cof, 
4597 / cof, 2719 / cof, 
4564 / cof, 2739 / cof, 
4526 / cof, 2763 / cof, 
4483 / cof, 2789 / cof, 
4438 / cof, 2818 / cof, 
4408 / cof, 2839 / cof, 
4221 / cof, 2968 / cof, 
4124 / cof, 3043 / cof, 
4055 / cof, 3096 / cof, 
3957 / cof, 3178 / cof, 
3876 / cof, 3249 / cof, 
3820 / cof, 3301 / cof, 
3764 / cof, 3355 / cof, 
3717 / cof, 3400 / cof, 
fill = '#ffffff')


def tree1(x, y, color1, color2):
    c.create_oval(x / cof, (y - 391) / cof, 
                  (x + 229) / cof, (y - 113) / cof, 
                  fill = color1, outline = color1)

    c.create_polygon((x + 114) / cof, y / cof, 
    (x + 109) / cof, (y - 4) / cof, 
    (x + 106) / cof, (y - 140) / cof, 
    (x + 94) / cof, (y - 145) / cof, 
    (x + 82) / cof, (y - 152) / cof, 
    (x + 74) / cof, (y - 160) / cof, 
    (x + 66) / cof, (y - 169) / cof, 
    (x + 62) / cof, (y - 179) / cof, 
    (x + 58) / cof, (y - 190) / cof, 
    (x + 56) / cof, (y - 203) / cof, 
    (x + 55) / cof, (y - 212) / cof, 
    (x + 59) / cof, (y - 214) / cof, 
    (x + 62) / cof, (y - 211) / cof, 
    (x + 63) / cof, (y - 203) / cof, 
    (x + 65) / cof, (y - 196) / cof, 
    (x + 68) / cof, (y - 188) / cof, 
    (x + 73) / cof, (y - 180) / cof, 
    (x + 78) / cof, (y - 174) / cof, 
    (x + 83) / cof, (y - 169) / cof, 
    (x + 90) / cof, (y - 163) / cof, 
    (x + 98) / cof, (y - 159) / cof, 
    (x + 106) / cof, (y - 157) / cof, 
    (x + 107) / cof, (y - 227) / cof, 
    (x + 111) / cof, (y - 229) / cof, 
    (x + 115) / cof, (y - 227) / cof, 
    (x + 117) / cof, (y - 179) / cof, 
    (x + 122) / cof, (y - 177) / cof, 
    (x + 130) / cof, (y - 180) / cof, 
    (x + 141) / cof, (y - 186) / cof, 
    (x + 149) / cof, (y - 195) / cof, 
    (x + 155) / cof, (y - 202) / cof, 
    (x + 161) / cof, (y - 211) / cof, 
    (x + 165) / cof, (y - 218) / cof, 
    (x + 168) / cof, (y - 219) / cof, 
    (x + 170) / cof, (y - 214) / cof, 
    (x + 168) / cof, (y - 206) / cof, 
    (x + 162) / cof, (y - 195) / cof, 
    (x + 156) / cof, (y - 187) / cof, 
    (x + 149) / cof, (y - 178) / cof, 
    (x + 141) / cof, (y - 172) / cof, 
    (x + 133) / cof, (y - 168) / cof, 
    (x + 125) / cof, (y - 165) / cof, 
    (x + 119) / cof, (y - 162) / cof, 
    (x + 126) / cof, (y - 3) / cof, 
    (x + 122) / cof, y / cof,
    fill = color2) 



def tree2(x, y, color1, color2):
    c.create_oval(x / cof, (y - 309) / cof,
    (x + 210) / cof, (y - 56) / cof,
    fill = color1, outline = color1)

    c.create_polygon((x + 97) / cof, y / cof,
    (x + 91) / cof, (y - 3) / cof, 
    (x + 96) / cof, (y - 85) / cof, 
    (x + 97) / cof, (y - 92) / cof, 
    (x + 96) / cof, (y - 97) / cof, 
    (x + 87) / cof, (y - 104) / cof, 
    (x + 79) / cof, (y - 110) / cof, 
    (x + 72) / cof, (y - 120) / cof, 
    (x + 68) / cof, (y - 130) / cof, 
    (x + 65) / cof, (y - 141) / cof, 
    (x + 64) / cof, (y - 150) / cof, 
    (x + 67) / cof, (y - 154) / cof, 
    (x + 70) / cof, (y - 156) / cof, 
    (x + 73) / cof, (y - 154) / cof, 
    (x + 75) / cof, (y - 146) / cof, 
    (x + 79) / cof, (y - 136) / cof, 
    (x + 83) / cof, (y - 128) / cof, 
    (x + 89) / cof, (y - 122) / cof, 
    (x + 96) / cof, (y - 117) / cof, 
    (x + 99) / cof, (y - 118) / cof, 
    (x + 100) / cof, (y - 139) / cof, 
    (x + 104) / cof, (y - 141) / cof, 
    (x + 108) / cof, (y - 138) / cof, 
    (x + 109) / cof, (y - 106) / cof, 
    (x + 117) / cof, (y - 109) / cof, 
    (x + 126) / cof, (y - 116) / cof, 
    (x + 135) / cof, (y - 125) / cof, 
    (x + 142) / cof, (y - 136) / cof, 
    (x + 146) / cof, (y - 142) / cof, 
    (x + 150) / cof, (y - 140) / cof, 
    (x + 153) / cof, (y - 136) / cof, 
    (x + 152) / cof, (y - 130) / cof, 
    (x + 146) / cof, (y - 120) / cof, 
    (x + 138) / cof, (y - 110) / cof, 
    (x + 130) / cof, (y - 101) / cof, 
    (x + 122) / cof, (y - 95) / cof, 
    (x + 113) / cof, (y - 90) / cof, 
    (x + 109) / cof, (y - 88) / cof, 
    (x + 108) / cof, (y - 84) / cof, 
    (x + 107) / cof, (y - 2) / cof, 
    (x + 102) / cof, y / cof,
    fill = color2)



def tree3(x, y, color1, color2):
    c.create_polygon((x + (232 - 103)) / cof, (y - (277 - 191)) / cof,
        (x + (184 - 103)) / cof, (y - (277 - 189)) / cof,
        (x + (62 - 3)) / cof, (y - (277 - 185)) / cof,
        (x + (37 - 3)) / cof, (y - (277 - 177)) / cof,
        (x + (25 - 3)) / cof, (y - (277 - 170)) / cof,
        (x + (14 - 3)) / cof, (y - (277 - 154)) / cof,
        (x + (12 - 3)) / cof, (y - (277 - 139)) / cof,
        (x + (17 - 3)) / cof, (y - (277 - 127)) / cof,
        (x + (32 - 3)) / cof, (y - (277 - 109)) / cof,
        (x + (47 - 3)) / cof, (y - (277 - 98)) / cof,
        (x + (57 - 3)) / cof, (y - (277 - 88)) / cof,
        (x + (58 - 3)) / cof, (y - (277 - 83)) / cof,
        (x + (54 - 3)) / cof, (y - (277 - 78)) / cof,
        (x + (44 - 3)) / cof, (y - (277 - 72)) / cof,
        (x + (26 - 3)) / cof, (y - (277 - 65)) / cof,
        (x + (13 - 3)) / cof, (y - (277 - 55)) / cof,
        (x + (5 - 3)) / cof, (y - (277 - 41)) / cof,
        x / cof, (y - (277 - 28)) / cof,
        (x + (6 - 3)) / cof, (y - (277 - 13)) / cof,
        (x + (15 - 3)) / cof, (y - 277) / cof,
        (x + (29 - 3)) / cof, (y - (3277 - 2986)) / cof,
        (x + (49 - 3)) / cof, (y - (3277 - 2973)) / cof,
        (x + (61 - 3)) / cof, (y - (3277 - 2960)) / cof,
        (x + (67 - 3)) / cof, (y - (3277 - 2944)) / cof,
        (x + (69 - 3)) / cof, (y - (3277 - 2922)) / cof,
        (x + (75 - 3)) / cof, (y - (3277 - 2902)) / cof,
        (x + (85 - 3)) / cof, (y - (3277 - 2884)) / cof,
        (x + (200 - 103)) / cof, (y - (3277 - 2873)) / cof,
        (x + (219 - 103)) / cof, (y - (3277 - 2870)) / cof,
        (x + (232 - 103)) / cof, (y - (3277 - 2873)) / cof,
        (x + (245 - 103)) / cof, (y - (3277 - 2882)) / cof,
        (x + (253 - 103)) / cof, (y - (3277 - 2896)) / cof,
        (x + (259 - 103)) / cof, (y - (3277 - 2915)) / cof,
        (x + (260 - 103)) / cof, (y - (3277 - 2943)) / cof,
        (x + (266 - 103)) / cof, (y - (3277 - 2957)) / cof,
        (x + (275 - 103)) / cof, (y - (3277 - 2965)) / cof,
        (x + (298 - 103)) / cof, (y - (3277 - 2972)) / cof,
        (x + (313 - 103)) / cof, (y - (3277 - 2979)) / cof,
        (x + (324 - 103)) / cof, (y - (3277 - 2992)) / cof,
        (x + (329 - 103)) / cof, (y - (277 - 5)) / cof,
        (x + (326 - 103)) / cof, (y - (277 - 19)) / cof,
        (x + (315 - 103)) / cof, (y - (277 - 36)) / cof,
        (x + (301 - 103)) / cof, (y - (277 - 48)) / cof,
        (x + (295 - 103)) / cof, (y - (277 - 61)) / cof,
        (x + (298 - 103)) / cof, (y - (277 - 71)) / cof,
        (x + (307 - 103)) / cof, (y - (277 - 81)) / cof,
        (x + (321 - 103)) / cof, (y - (277 - 88)) / cof,
        (x + (335 - 103)) / cof, (y - (277 - 95)) / cof,
        (x + (348 - 103)) / cof, (y - (277 - 104)) / cof,
        (x + (355 - 103)) / cof, (y - (277 - 117)) / cof,
        (x + (357 - 103)) / cof, (y - (277 - 130)) / cof,
        (x + (353 - 103)) / cof, (y - (277 - 146)) / cof,
        (x + (344 - 103)) / cof, (y - (277 - 160)) / cof,
        (x + (330 - 103)) / cof, (y - (277 - 171)) / cof,
        (x + (308 - 103)) / cof, (y - (277 - 180)) / cof,
        (x + (278 - 103)) / cof, (y - (277 - 188)) / cof,
        (x + (248 - 103)) / cof, (y - (277 - 191)) / cof,
        fill = color1)
    
    c.create_polygon((x + (241 - 103)) / cof, y / cof,
        (x + (237 - 103)) / cof, (y - (7 - 4)) / cof,
        (x + (230 - 103)) / cof, (y - (277 - 167)) / cof,
        (x + (206 - 103)) / cof, (y - (277 - 164)) / cof,
        (x + (191 - 103)) / cof, (y - (277 - 157)) / cof,
        (x + (175 - 103)) / cof, (y - (277 - 147)) / cof,
        (x + (67 - 3)) / cof, (y - (277 - 136)) / cof,
        (x + (63 - 3)) / cof, (y - (277 - 127)) / cof,
        (x + (64 - 3)) / cof, (y - (277 - 120)) / cof,
        (x + (67 - 3)) / cof, (y - (277 - 117)) / cof,
        (x + (73 - 3)) / cof, (y - (277 - 126)) / cof,
        (x + (84 - 3)) / cof, (y - (277 - 138)) / cof,
        (x + (99 - 3)) / cof, (y - (277 - 144)) / cof,
        (x + (218 - 103)) / cof, (y - (277 - 149)) / cof,
        (x + (228 - 103)) / cof, (y - (277 - 150)) / cof,
        (x + (229 - 103)) / cof, (y - (277 - 144)) / cof,
        (x + (225 - 103)) / cof, (y - (277 - 92)) / cof,
        (x + (211 - 103)) / cof, (y - (277 - 85)) / cof,
        (x + (199 - 103)) / cof, (y - (277 - 76)) / cof,
        (x + (190 - 103)) / cof, (y - (277 - 66)) / cof,
        (x + (182 - 103)) / cof, (y - (277 - 52)) / cof,
        (x + (179 - 103)) / cof, (y - (277 - 41)) / cof,
        (x + (178 - 103)) / cof, (y - (277 - 31)) / cof,
        (x + (182 - 103)) / cof, (y - (277 - 28)) / cof,
        (x + (186 - 103)) / cof, (y - (277 - 33)) / cof,
        (x + (189 - 103)) / cof, (y - (277 - 44)) / cof,
        (x + (195 - 103)) / cof, (y - (277 - 55)) / cof,
        (x + (206 - 103)) / cof, (y - (277 - 65)) / cof,
        (x + (223 - 103)) / cof, (y - (277 - 73)) / cof,
        (x + (224 - 103)) / cof, (y - (277 - 49)) / cof,
        (x + (231 - 103)) / cof, (y - (277 - 50)) / cof,
        (x + (234 - 103)) / cof, (y - (277 - 59)) / cof,
        (x + (238 - 103)) / cof, (y - (277 - 101)) / cof,
        (x + (253 - 103)) / cof, (y - (277 - 89)) / cof,
        (x + (263 - 103)) / cof, (y - (277 - 77)) / cof,
        (x + (268 - 103)) / cof, (y - (277 - 61)) / cof,
        (x + (269 - 103)) / cof, (y - (277 - 41)) / cof,
        (x + (277 - 103)) / cof, (y - (277 - 43)) / cof,
        (x + (278 - 103)) / cof, (y - (277 - 58)) / cof,
        (x + (273 - 103)) / cof, (y - (277 - 80)) / cof,
        (x + (268 - 103)) / cof, (y - (277 - 91)) / cof,
        (x + (275 - 103)) / cof, (y - (277 - 94)) / cof,
        (x + (295 - 103)) / cof, (y - (277 - 94)) / cof,
        (x + (293 - 103)) / cof, (y - (277 - 102)) / cof,
        (x + (276 - 103)) / cof, (y - (277 - 105)) / cof,
        (x + (263 - 103)) / cof, (y - (277 - 102)) / cof,
        (x + (258 - 103)) / cof, (y - (277 - 104)) / cof,
        (x + (251 - 103)) / cof, (y - (277 - 112)) / cof,
        (x + (242 - 103)) / cof, (y - (277 - 115)) / cof,
        (x + (240 - 103)) / cof, (y - (277 - 121)) / cof,
        (x + (256 - 103)) / cof, (y - (7 - 4)) / cof,
        (x + (252 - 103)) / cof, y / cof,
        fill = color2)



def tree4(x, y, color1, color2):
    c.create_polygon((x + (688 - 561)) / cof, (y - (68 - 3)) / cof,
    (x + (635 - 561)) / cof, (y - 68) / cof,
    (x + (608 - 561)) / cof, (y - (468 - 391)) / cof,
    (x + (588 - 561)) / cof, (y - (468 - 379)) / cof,
    (x + (572 - 561)) / cof, (y - (468 - 360)) / cof,
    (x + (569 - 561)) / cof, (y - (468 - 334)) / cof,
    (x + (574 - 561)) / cof, (y - (468 - 316)) / cof,
    (x + (591 - 561)) / cof, (y - (468 - 298)) / cof,
    (x + (591 - 561)) / cof, (y - (468 - 294)) / cof,
    (x + (575 - 561)) / cof, (y - (468 - 284)) / cof,
    (x + (565 - 561)) / cof, (y - (468 - 267)) / cof,
    x / cof, (y - (468 - 252)) / cof,
    (x + 1) / cof, (y - (468 - 231)) / cof,
    (x + (70 - 61)) / cof, (y - (468 - 216)) / cof,
    (x + (84 - 61)) / cof, (y - (468 - 204)) / cof,
    (x + (605 - 561)) / cof, (y - (468 - 202)) / cof,
    (x + (628 - 561)) / cof, (y - (468 - 210)) / cof,
    (x + (645 - 561)) / cof, (y - (468 - 221)) / cof, 
    (x + (638 - 561)) / cof, (y - (468 - 188)) / cof,
    (x + (641 - 561)) / cof, (y - (468 - 152)) / cof,
    (x + (652 - 561)) / cof, (y - (468 - 133)) / cof,
    (x + (673 - 561)) / cof, (y - (468 - 126)) / cof,
    (x + (694 - 561)) / cof, (y - (468 - 130)) / cof, 
    (x + (706 - 561)) / cof, (y - (468 - 145)) / cof,
    (x + (711 - 561)) / cof, (y - (468 - 167)) / cof,
    (x + (713 - 561)) / cof, (y - (468 - 187)) / cof,
    (x + (712 - 561)) / cof, (y - (468 - 201)) / cof,
    (x + (732 - 561)) / cof, (y - (468 - 192)) / cof,
    (x + (747 - 561)) / cof, (y - (468 - 191)) / cof, 
    (x + (758 - 561)) / cof, (y - (468 - 196)) / cof, 
    (x + (767 - 561)) / cof, (y - (468 - 208)) / cof,
    (x + (768 - 561)) / cof, (y - (468 - 227)) / cof,
    (x + (762 - 561)) / cof, (y - (468 - 246)) / cof,
    (x + (755 - 561)) / cof, (y - (468 - 256)) / cof,
    (x + (777 - 561)) / cof, (y - (468 - 263)) / cof,
    (x + (794 - 561)) / cof, (y - (468 - 276)) / cof,
    (x + (804 - 561)) / cof, (y - (468 - 289)) / cof,
    (x + (811 - 561)) / cof, (y - (468 - 309)) / cof,
    (x + (814 - 561)) / cof, (y - (468 - 336)) / cof,
    (x + (807 - 561)) / cof, (y - (468 - 354)) / cof,
    (x + (791 - 561)) / cof, (y - (468 - 374)) / cof,
    (x + (762 - 561)) / cof, (y - (468 - 389)) / cof,
    (x + (735 - 561)) / cof, (y - (468 - 398)) / cof,
    (x + (708 - 561)) / cof, (y - (468 - 402)) / cof,
    fill = color1)

    c.create_polygon((x + (695 - 561)) / cof, y / cof,
    (x + (691 - 561)) / cof, (y - 4) / cof,
    (x + (686 - 561)) / cof, (y - (468 - 342)) / cof,
    (x + (654 - 561)) / cof, (y - (468 - 336)) / cof,
    (x + (638 - 561)) / cof, (y - (468 - 328)) / cof,
    (x + (624 - 561)) / cof, (y - (468 - 332)) / cof,
    (x + (608 - 561)) / cof, (y - (468 - 330)) / cof,
    (x + (609 - 561)) / cof, (y - (468 - 324)) / cof,
    (x + (624 - 561)) / cof, (y - (468 - 323)) / cof,
    (x + (627 - 561)) / cof, (y - (468 - 320)) / cof,
    (x + (618 - 561)) / cof, (y - (468 - 306)) / cof,
    (x + (613 - 561)) / cof, (y - (468 - 294)) / cof,
    (x + (614 - 561)) / cof, (y - (468 - 288)) / cof,
    (x + (616 - 561)) / cof, (y - (468 - 287)) / cof,
    (x + (621 - 561)) / cof, (y - (468 - 297)) / cof,
    (x + (630 - 561)) / cof, (y - (468 - 309)) / cof,
    (x + (641 - 561)) / cof, (y - (468 - 318)) / cof,
    (x + (657 - 561)) / cof, (y - (468 - 325)) / cof,
    (x + (676 - 561)) / cof, (y - (468 - 330)) / cof,
    (x + (685 - 561)) / cof, (y - (468 - 330)) / cof,
    (x + (684 - 561)) / cof, (y - (468 - 293)) / cof,
    (x + (678 - 561)) / cof, (y - (468 - 288)) / cof,
    (x + (667 - 561)) / cof, (y - (468 - 284)) / cof,
    (x + (660 - 561)) / cof, (y - (468 - 276)) / cof,
    (x + (657 - 561)) / cof, (y - (468 - 265)) / cof,
    (x + (660 - 561)) / cof, (y - (468 - 261)) / cof,
    (x + (666 - 561)) / cof, (y - (468 - 268)) / cof,
    (x + (676 - 561)) / cof, (y - (468 - 275)) / cof,
    (x + (683 - 561)) / cof, (y - (468 - 278)) / cof,
    (x + (688 - 561)) / cof, (y - (468 - 274)) / cof,
    (x + (693 - 561)) / cof, (y - (468 - 278)) / cof,
    (x + (696 - 561)) / cof, (y - (468 - 292)) / cof,
    (x + (709 - 561)) / cof, (y - (468 - 286)) / cof,
    (x + (718 - 561)) / cof, (y - (468 - 277)) / cof,
    (x + (727 - 561)) / cof, (y - (468 - 267)) / cof,
    (x + (732 - 561)) / cof, (y - (468 - 258)) / cof,
    (x + (734 - 561)) / cof, (y - (468 - 266)) / cof,
    (x + (731 - 561)) / cof, (y - (468 - 274)) / cof,
    (x + (722 - 561)) / cof, (y - (468 - 286)) / cof,
    (x + (712 - 561)) / cof, (y - (468 - 295)) / cof,
    (x + (702 - 561)) / cof, (y - (468 - 301)) / cof,
    (x + (698 - 561)) / cof, (y - (468 - 305)) / cof,
    (x + (696 - 561)) / cof, (y - (468 - 313)) / cof,
    (x + (698 - 561)) / cof, (y - (468 - 351)) / cof,
    (x + (709 - 561)) / cof, (y - (468 - 349)) / cof,
    (x + (724 - 561)) / cof, (y - (468 - 339)) / cof,
    (x + (736 - 561)) / cof, (y - (468 - 325)) / cof,
    (x + (744 - 561)) / cof, (y - (468 - 314)) / cof,
    (x + (748 - 561)) / cof, (y - (468 - 304)) / cof,
    (x + (752 - 561)) / cof, (y - (468 - 308)) / cof,
    (x + (751 - 561)) / cof, (y - (468 - 317)) / cof,
    (x + (744 - 561)) / cof, (y - (468 - 330)) / cof,
    (x + (733 - 561)) / cof, (y - (468 - 344)) / cof,
    (x + (716 - 561)) / cof, (y - (468 - 358)) / cof,
    (x + (700 - 561)) / cof, (y - (468 - 367)) / cof,
    (x + (706 - 561)) / cof, (y - (468 - 464)) / cof,
    (x + (702 - 561)) / cof, y / cof,
    fill = color2)



tree1(39, 3083, '#ef732b', '#94661b')
tree1(5826, 2426, '#e34d2a', '#77221d')
tree1(5659, 3219, '#004528', '#96641d')

tree2(292, 3220, '#e34d2a', '#6a211a')
tree2(1043, 3154, '#8e7c2a', '#573915')
tree2(4241, 2615, '#e34d2a', '#521d0f')

tree3(3103, 3277, '#e34d2a', '#431c0d')
tree3(5299, 2545, '#ef7f01', '#6d3900')

tree4(5561, 2468, '#fbc725', '#98631d')
tree4(4211, 3084, '#ef732b', '#783c17')



c.create_polygon(3961 / cof, 2688 / cof,
3907 / cof, 2681 / cof,
3861 / cof, 2672 / cof,
3813 / cof, 2657 / cof, 
3781 / cof, 2640 / cof, 
3761 / cof, 2622 / cof, 
3752 / cof, 2604 / cof, 
3753 / cof, 2584 / cof, 
3760 / cof, 2568 / cof, 
3778 / cof, 2555 / cof, 
3801 / cof, 2547 / cof, 
3830 / cof, 2546 / cof, 
3858 / cof, 2548 / cof, 
3873 / cof, 2551 / cof, 
3857 / cof, 2540 / cof, 
3842 / cof, 2520 / cof, 
3836 / cof, 2496 / cof, 
3841 / cof, 2476 / cof, 
3853 / cof, 2463 / cof, 
3867 / cof, 2460 / cof, 
3884 / cof, 2464 / cof, 
3896 / cof, 2471 / cof, 
3919 / cof, 2490 / cof, 
3915 / cof, 2468 / cof, 
3912 / cof, 2441 / cof, 
3914 / cof, 2413 / cof, 
3922 / cof, 2394 / cof, 
3941 / cof, 2374 / cof, 
3963 / cof, 2367 / cof, 
3985 / cof, 2367 / cof, 
4002 / cof, 2375 / cof, 
4013 / cof, 2386 / cof, 
4023 / cof, 2408 / cof, 
4026 / cof, 2432 / cof, 
4024 / cof, 2457 / cof, 
4019 / cof, 2484 / cof, 
4015 / cof, 2501 / cof, 
4027 / cof, 2491 / cof, 
4049 / cof, 2476 / cof, 
4076 / cof, 2468 / cof, 
4104 / cof, 2467 / cof, 
4131 / cof, 2472 / cof, 
4148 / cof, 2483 / cof, 
4160 / cof, 2501 / cof, 
4167 / cof, 2518 / cof, 
4170 / cof, 2546 / cof, 
4167 / cof, 2576 / cof, 
4158 / cof, 2611 / cof, 
4143 / cof, 2635 / cof, 
4119 / cof, 2658 / cof, 
4090 / cof, 2673 / cof, 
4049 / cof, 2686 / cof, 
4019 / cof, 2690 / cof, 
3980 / cof, 2690 / cof, 
fill = '#8e7c2a')

c.create_polygon(3967 / cof, 2776 / cof, 
3962 / cof, 2773 / cof, 
3963 / cof, 2649 / cof, 
3922 / cof, 2640 / cof, 
3904 / cof, 2632 / cof, 
3887 / cof, 2620 / cof, 
3875 / cof, 2605 / cof, 
3866 / cof, 2590 / cof, 
3866 / cof, 2583 / cof, 
3872 / cof, 2582 / cof, 
3877 / cof, 2590 / cof, 
3887 / cof, 2604 / cof, 
3898 / cof, 2615 / cof, 
3913 / cof, 2624 / cof, 
3929 / cof, 2630 / cof, 
3962 / cof, 2633 / cof, 
3965 / cof, 2583 / cof, 
3950 / cof, 2574 / cof, 
3936 / cof, 2561 / cof, 
3928 / cof, 2548 / cof, 
3923 / cof, 2536 / cof, 
3924 / cof, 2530 / cof, 
3927 / cof, 2529 / cof, 
3931 / cof, 2538 / cof, 
3940 / cof, 2550 / cof, 
3949 / cof, 2558 / cof, 
3965 / cof, 2567 / cof, 
3968 / cof, 2525 / cof, 
3975 / cof, 2527 / cof, 
3975 / cof, 2594 / cof, 
3988 / cof, 2588 / cof, 
4004 / cof, 2575 / cof, 
4014 / cof, 2562 / cof, 
4022 / cof, 2546 / cof, 
4028 / cof, 2530 / cof, 
4032 / cof, 2533 / cof, 
4026 / cof, 2554 / cof, 
4015 / cof, 2575 / cof, 
4001 / cof, 2593 / cof, 
3987 / cof, 2603 / cof, 
3976 / cof, 2608 / cof, 
3978 / cof, 2647 / cof, 
4000 / cof, 2643 / cof, 
4023 / cof, 2635 / cof, 
4046 / cof, 2622 / cof, 
4065 / cof, 2606 / cof, 
4080 / cof, 2588 / cof, 
4090 / cof, 2572 / cof, 
4097 / cof, 2561 / cof, 
4101 / cof, 2565 / cof, 
4094 / cof, 2582 / cof, 
4082 / cof, 2602 / cof, 
4094 / cof, 2604 / cof, 
4108 / cof, 2603 / cof, 
4125 / cof, 2596 / cof, 
4124 / cof, 2603 / cof, 
4100 / cof, 2615 / cof, 
4083 / cof, 2617 / cof, 
4075 / cof, 2616 / cof, 
4070 / cof, 2617 / cof, 
4052 / cof, 2632 / cof, 
4035 / cof, 2644 / cof, 
4016 / cof, 2653 / cof, 
3995 / cof, 2660 / cof, 
3979 / cof, 2664 / cof, 
3984 / cof, 2772 / cof, 
3980 / cof, 2776 / cof, 
fill = '#4f2b11')



def branch():
    c.create_polygon(0 / cof, 68 / cof,
        174 / cof, 89 / cof,
        382 / cof, 55 / cof,
        379 / cof, 74 / cof,
        217 / cof, 106 / cof,
        675 / cof, 161 / cof,
        669 / cof, 168 / cof,
        0 / cof, 100 / cof,
        fill = '#000000')

    c.create_polygon(1380 / cof, 0 / cof,
        1401 / cof, 0 / cof,
        1617 / cof, 140 / cof,
        2017 / cof, 177 / cof,
        2013 / cof, 188 / cof,
        1634 / cof, 151 / cof,
        1792 / cof, 252 / cof,
        1787 / cof, 260 / cof,
        fill = '#000000')

    c.create_polygon(0 / cof, 250 / cof,
                    619 / cof, 587 / cof,
                    1212 / cof, 706 / cof,
                    1765 / cof, 666 / cof,
                    1761 / cof, 688 / cof,
                    1224 / cof, 720 / cof,
                    1689 / cof, 932 / cof,
                    1687 / cof, 946 / cof,
                    1674 / cof, 954 / cof,
                    1180 / cof, 715 / cof,
                    665 / cof, 630 / cof,
                    1086 / cof, 915 / cof,
                    1383 / cof, 1015 / cof,
                    1749 / cof, 979 / cof,
                    1609 / cof, 806 / cof,
                    1069 / cof, 336 / cof,
                    1050 / cof, 308 / cof,
                    770 / cof, 2 / cof,
                    763 / cof, 2 / cof,
                    826 / cof, 256 / cof,
                    1219 / cof, 715 / cof,
                    1203 / cof, 713 / cof,
                    830 / cof, 278 / cof,
                    920 / cof, 532 / cof,
                    1020 / cof, 815 / cof,
                    1011 / cof, 821 / cof,
                    944 / cof, 651 / cof,
                    908 / cof, 531 / cof,
                    819 / cof, 280 / cof,
                    737 / cof, 0 / cof,
                    816 / cof, 0 / cof,
                    1062 / cof, 289 / cof,
                    1452 / cof, 415 / cof,
                    1648 / cof, 424 / cof,
                    2021 / cof, 331 / cof,
                    2315 / cof, 284 / cof,
                    2319 / cof, 287 / cof,
                    2318 / cof, 292 / cof,
                    2138 / cof, 320 / cof,
                    2020 / cof, 342 / cof,
                    1634 / cof, 434 / cof,
                    1943 / cof, 452 / cof,
                    2015 / cof, 465 / cof,
                    2373 / cof, 411 / cof,
                    2375 / cof, 418 / cof,
                    2369 / cof, 422 / cof,
                    2041 / cof, 471 / cof,
                    2290 / cof, 600 / cof,
                    2284 / cof, 608 / cof,
                    2025 / cof, 475 / cof,
                    1923 / cof, 469 / cof,
                    1494 / cof, 440 / cof,
                    1724 / cof, 585 / cof,
                    2153 / cof, 776 / cof,
                    2149 / cof, 784 / cof,
                    2142 / cof, 784 / cof,
                    1716 / cof, 595 / cof,
                    1484 / cof, 442 / cof,
                    1097 / cof, 330 / cof,
                    1582 / cof, 750 / cof,
                    2137 / cof, 989 / cof,
                    2139 / cof, 998 / cof,
                    2129 / cof, 1002 / cof,
                    1595 / cof, 769 / cof,
                    1769 / cof, 981 / cof,
                    2006 / cof, 963 / cof,
                    1993 / cof, 974 / cof,
                    1783 / cof, 994 / cof,
                    1872 / cof, 1104 / cof,
                    1864 / cof, 1113 / cof,
                    1766 / cof, 996 / cof,
                    1388 / cof, 1029 / cof,
                    1482 / cof, 1135 / cof,
                    1935 / cof, 1246 / cof,
                    1925 / cof, 1255 / cof,
                    1496 / cof, 1153 / cof,
                    1740 / cof, 1445 / cof,
                    1734 / cof, 1453 / cof,
                    1362 / cof, 1031 / cof,
                    1102 / cof, 947 / cof,
                    595 / cof, 617 / cof,
                    270 / cof, 449 / cof,
                    674 / cof, 1049 / cof,
                    1044 / cof, 1347 / cof,
                    1042 / cof, 1353 / cof,
                    1037 / cof, 1356 / cof,
                    667 / cof, 1062 / cof,
                    784 / cof, 1397 / cof,
                    776 / cof, 1405 / cof,
                    643 / cof, 1028 / cof,
                    199 / cof, 412 / cof,
                    0 / cof, 314 / cof,
                    fill = '#000000')

    c.create_polygon(1193 / cof, 702 / cof,
                    1211 / cof, 705 / cof,
                    1220 / cof, 716 / cof,
                    1201 / cof, 716 / cof,
                    fill = '#000000')

    c.create_polygon(1481 / cof, 689 / cof,
                    1518 / cof, 686 / cof,
                    1542 / cof, 703 / cof,
                    1497 / cof, 706 / cof,
                    fill = '#000000')

    c.create_polygon(908 / cof, 531 / cof,
                    964 / cof, 656 / cof,
                    973 / cof, 681 / cof,
                    954 / cof, 678 / cof,
                    fill = '#000000')






def sheet1(x, y):

    number = 0


    while number < number0:

        cooficent0 = random.randint(1, 5)
        cooficent1 = 0
        if cooficent0 == 1:
            cooficent1 = 0.9
        elif cooficent0 == 2:
            cooficent1 = 0.95
        elif cooficent0 == 3:
            cooficent1 = 1
        elif cooficent0 == 4:
            cooficent1 = 1.05
        elif cooficent0 == 5:
            cooficent1 = 1.1



        num = random.randint(1, 3)

        if num == 1:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                            ((x + 13) * cooficent1) / cof, ((y - 3) * cooficent1) / cof,
                            ((x + 26) * cooficent1) / cof, ((y - 7) * cooficent1) / cof,
                            ((x + 61) * cooficent1) / cof, ((y - 12) * cooficent1) / cof,
                            ((x + 52) * cooficent1) / cof, ((y - 18) * cooficent1) / cof,
                            ((x + 59) * cooficent1) / cof, ((y - 10) * cooficent1) / cof,
                            ((x + 66) * cooficent1) / cof, ((y - 1) * cooficent1) / cof,
                            ((x + 75) * cooficent1) / cof, ((y + 7) * cooficent1) / cof,
                            ((x + 100) * cooficent1) / cof, ((y + 26) * cooficent1) / cof,
                            ((x + 93) * cooficent1) / cof, ((y + 36) * cooficent1) / cof,
                            ((x + 85) * cooficent1) / cof, ((y + 44) * cooficent1) / cof,
                            ((x + 76) * cooficent1) / cof, ((y + 49) * cooficent1) / cof,
                            ((x + 65) * cooficent1) / cof, ((y + 53) * cooficent1) / cof,
                            ((x + 49) * cooficent1) / cof, ((y + 54) * cooficent1) / cof,
                            ((x + 48) * cooficent1) / cof, ((y + 36) * cooficent1) / cof,
                            ((x + 42) * cooficent1) / cof, ((y + 41) * cooficent1) / cof,
                            ((x + 39) * cooficent1) / cof, ((y + 48) * cooficent1) / cof,
                            ((x + 34) * cooficent1) / cof, ((y + 49) * cooficent1) / cof,
                            ((x + 27) * cooficent1) / cof, ((y + 46) * cooficent1) / cof,
                            ((x + 20) * cooficent1) / cof, ((y + 40) * cooficent1) / cof,
                            ((x + 12) * cooficent1) / cof, ((y + 33) * cooficent1) / cof,
                            ((x + 5) * cooficent1) / cof, ((y + 23) * cooficent1) / cof,
                            ((x + 1) * cooficent1) / cof, ((y + 15) * cooficent1) / cof,
                            ((x - 2) * cooficent1) / cof, ((y + 6) * cooficent1) / cof,
                            fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1

        elif num == 2:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 63) * cooficent1) / cof, ((y - 4) * cooficent1) / cof,
                             ((x + 116) * cooficent1) / cof, ((y + 53) * cooficent1) / cof,
                             ((x + 65) * cooficent1) / cof, ((y + 78) * cooficent1) / cof,
                             ((x + 61) * cooficent1) / cof, ((y + 57) * cooficent1) / cof,
                             ((x + 56) * cooficent1) / cof, ((y + 74) * cooficent1) / cof,
                             ((x + 51) * cooficent1) / cof, ((y + 78) * cooficent1) / cof,
                             ((x + 30) * cooficent1) / cof, ((y + 75) * cooficent1) / cof,
                             ((x + 30) * cooficent1) / cof, ((y + 66) * cooficent1) / cof,
                             ((x + 37) * cooficent1) / cof, ((y + 45) * cooficent1) / cof,
                             ((x + 35) * cooficent1) / cof, ((y + 44) * cooficent1) / cof,
                             ((x + 16) * cooficent1) / cof, (( y + 74) * cooficent1) / cof,
                             ((x + 9) * cooficent1) / cof, ((y + 68) * cooficent1) / cof,
                             ((x + 1) * cooficent1) / cof, ((y + 57) * cooficent1) / cof,
                             ((x - 4) * cooficent1) / cof, ((y + 47) * cooficent1) / cof,
                             ((x - 7) * cooficent1) / cof, ((y + 38) * cooficent1) / cof,
                             ((x - 8) * cooficent1) / cof, ((y + 27) * cooficent1) / cof,
                             ((x - 7) * cooficent1) / cof, ((y + 17) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1


        elif num == 3:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 62) * cooficent1) / cof, ((y + 31) * cooficent1) / cof,
                             ((x + 33) * cooficent1) / cof, ((y + 86) * cooficent1) / cof,
                             ((x + 14) * cooficent1) / cof, ((y + 55) * cooficent1) / cof,
                             ((x + 19) * cooficent1) / cof, ((y + 83) * cooficent1) / cof,
                             ((x + 14) * cooficent1) / cof, ((y + 87) * cooficent1) / cof,
                             (x * cooficent1) / cof, ((y + 86) * cooficent1) / cof,
                             ((x - 16) * cooficent1) / cof, ((y + 80) * cooficent1) / cof,
                             ((x - 26) * cooficent1) / cof, ((y + 72) * cooficent1) / cof,
                             ((x - 34) * cooficent1) / cof, ((y + 64) * cooficent1) / cof,
                             ((x - 49) * cooficent1) / cof, ((y + 43) * cooficent1) / cof,
                             ((x - 51) * cooficent1) / cof, ((y + 37) * cooficent1) / cof,
                             ((x - 46) * cooficent1) / cof, ((y + 31) * cooficent1) / cof,
                             ((x - 26) * cooficent1) / cof, ((y + 17) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1






def sheet2(x, y):

    number = 0


    while number < number1:

        cooficent0 = random.randint(1, 5)
        cooficent1 = 0
        if cooficent0 == 1:
            cooficent1 = 0.9
        elif cooficent0 == 2:
            cooficent1 = 0.95
        elif cooficent0 == 3:
            cooficent1 = 1
        elif cooficent0 == 4:
            cooficent1 = 1.05
        elif cooficent0 == 5:
            cooficent1 = 1.1



        num = random.randint(1, 5)

        if num == 1:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 67) * cooficent1) / cof, ((y - 41) * cooficent1) / cof,
                             ((x + 157) * cooficent1) / cof, ((y + 11) * cooficent1) / cof,
                             ((x + 87) * cooficent1) / cof, ((y + 55) * cooficent1) / cof,
                             ((x + 78) * cooficent1) / cof, ((y + 26) * cooficent1) / cof,
                             ((x + 52) * cooficent1) / cof, ((y + 48) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1

        elif num == 2:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 78) * cooficent1) / cof, ((y - 32) * cooficent1) / cof,
                             ((x + 159) * cooficent1) / cof, ((y + 7) * cooficent1) / cof,
                             ((x + 156) * cooficent1) / cof, ((y + 18) * cooficent1) / cof,
                             ((x + 149) * cooficent1) / cof, ((y + 27) * cooficent1) / cof,
                             ((x + 144) * cooficent1) / cof, ((y + 31) * cooficent1) / cof,
                             ((x + 127) * cooficent1) / cof, ((y + 39) * cooficent1) / cof,
                             ((x + 97) * cooficent1) / cof, ((y + 44) * cooficent1) / cof,
                             ((x + 57) * cooficent1) / cof, ((y + 40) * cooficent1) / cof,
                             ((x + 52) * cooficent1) / cof, ((y + 13) * cooficent1) / cof,
                             ((x + 29) * cooficent1) / cof, ((y + 39) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1

        elif num == 3:
            c.create_polygon(x / cof, y / cof,
                             (x + 66) / cof, (y - 41) / cof,
                             (x + 159) / cof, (y + 11) / cof,
                             (x + 88) / cof, (y + 56) / cof,
                             (x + 79) / cof, (y + 24) / cof,
                             (x + 51) / cof, (y + 47) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1

        elif num == 4:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 91) * cooficent1) / cof, ((y - 43) * cooficent1) / cof,
                             ((x + 142) * cooficent1) / cof, ((y + 9) * cooficent1) / cof,
                             ((x + 130) * cooficent1) / cof, ((y + 22) * cooficent1) / cof,
                             ((x + 115) * cooficent1) / cof, ((y + 31) * cooficent1) / cof,
                             ((x + 96) * cooficent1) / cof, ((y + 39) * cooficent1) / cof,
                             ((x + 84) * cooficent1) / cof, ((y + 41) * cooficent1) / cof,
                             ((x + 63) * cooficent1) / cof, ((y + 19) * cooficent1) / cof,
                             ((x + 45) * cooficent1) / cof, ((y + 43) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1

        elif num == 5:
            c.create_polygon((x * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 116) * cooficent1) / cof, (y * cooficent1) / cof,
                             ((x + 141) * cooficent1) / cof, ((y + 70) * cooficent1) / cof,
                             ((x + 119) * cooficent1) / cof, ((y + 81) * cooficent1) / cof,
                             ((x + 102) * cooficent1) / cof, ((y + 82) * cooficent1) / cof,
                             ((x + 77) * cooficent1) / cof, ((y + 81) * cooficent1) / cof,
                             ((x + 58) * cooficent1) / cof, ((y + 70) * cooficent1) / cof,
                             ((x + 59) * cooficent1) / cof, ((y + 40) * cooficent1) / cof,
                             ((x + 38) * cooficent1) / cof, ((y + 62) * cooficent1) / cof,
                             fill = color)
            x = random.randint(num1, num1_1)
            y = random.randint(num2, num2_2)
            number += 1





c.create_polygon(0 / cof, 0 / cof,
                 2112 / cof, 0 / cof,
                 1574 / cof, 750 / cof,
                 1280 / cof, 758 / cof,
                 1238 / cof, 952 / cof,
                 0 / cof, 1016 / cof,
                 fill = '#ef8e01')



number0 = 300
number1 = 250
num1 = 0
num1_1 = 0
num2 = 0
num2_2 = 0


color = '#ffa901'


num1 = 0
num1_1 = 600
num2 = 0
num2_2 = 1600
number0 = 200
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 600
num1_1 = 1320
num2_2 = 1700
number0 = 320
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 1320
num1_1 = 1520
num2 = 1340
num2_2 = 1555
number0 = 4
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 1320
num1_1 = 1770
num2 = 0
num2_2 = 1340
number0 = 200
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 1770
num1_1 = 2310
num2_2 = 1100
number0 = 185
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 2310
num1_1 = 2450
num2 = 480
num2_2 = 680
number0 = 3
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 2310
num1_1 = 2680
num2 = 0
num2_2 = 480
number0 = 140
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 2680
num1_1 = 2850
num2_2 = 300
number0 = 3
sheet1(random.randint(num1, num1_1), random.randint(num2, num2_2))



branch()



color = '#ffc700'


num1 = 0
num1_1 = 1000
num2_2 = 1520
number1 = 180
sheet2(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 1000
num1_1 = 1640
num2_2 = 1160
number1 = 120
sheet2(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 1640
num1_1 = 2100
num2_2 = 990
number1 = 105
sheet2(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 2100
num1_1 = 2390
num2_2 = 520
number1 = 8
sheet2(random.randint(num1, num1_1), random.randint(num2, num2_2))

num1 = 2390
num1_1 = 2590
num2_2 = 320
number1 = 7
sheet2(random.randint(num1, num1_1), random.randint(num2, num2_2))


root.mainloop()